(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(3),o=n(7),a=(n(0),n(176)),i={slug:"installation/azure/",title:"Install on Azure"},u={unversionedId:"inst-azure",id:"inst-azure",isDocsHomePage:!1,title:"Install on Azure",description:"The following example shows the minimal values to deploy Otomi (with all apps) on a Kubernetes cluster in Azure.",source:"@site/docs/inst-azure.md",slug:"/installation/azure/",permalink:"/docs/installation/azure/",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/inst-azure.md",version:"current"},s=[],l={toc:s};function c(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The following example shows the minimal values to deploy Otomi (with all apps) on a Kubernetes cluster in Azure."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"charts:\n  cert-manager:\n    email: # an email address\n    stage: # use staging or production Let's Encrypt certificates\n  external-dns:\n    domainFilters:\n      - my.domain.com # the (hosted) domain zone you're using\n# Turn optional apps on or off\n  harbor:\n    enabled: # true by default. Set to false to disable\n  kubeapps:\n    enabled: # true by default. Set to false to disable\n  httpbin:\n    enabled: # true by default. Set to false to disable\ncluster:\n  domainSuffix: # The domain suffix the cluster is using\n  name: # the K8s cluster name\n  owner: # your company name (or any other name ;)\n  provider: azure\notomi:\n  adminPassword: # provide a password for the build-in otomi-admin account.\n  globalPullSecret: # fill in your own pull secret if your using more then 100 pulls per day\n    username: # your dockerhub username\n    password: # your dockerhub password\n  version: v0.14.4\ndns:\n  provider:\n    azure:\n      resourceGroup: # The Azure resource group of the Azure Public DNS zone\n      aadClientId: # The client ID of the Service Principal with sufficient access rights\n      aadClientSecret: # The client secret of the SP (will be encrypted in the values)\n      tenantId: # The ID of the Azure tenant of Azure DNS\n      subscriptionId: # The ID of the subscription of Azure DNS\nkms:\n  sops:\n    provider: azure\n    azure:\n      tenantId: # The ID of the Azure tenant of the Azure Vault used\n      clientId: The client ID of the Service Principal with sufficient access rights the Azure Vault\n      clientSecret: # The client secret of the SP used (will be encrypted in the values)\n      keys: # The Azure Vault key. Should be this format: 'https://<Vault URI>/keys/<key-name>/<key-version>'\noidc:\n  adminGroupID: # The group ID of the Azure AD group used for the Otomi platform admin role\n  clientID: The client ID of the Service Principal with sufficient access rights\n  clientSecret: # The client secret of the SP used (will be encrypted in the values)\n  issuer: # Use this format: https://login.microsoftonline.com/<tenantID>/\n  teamAdminGroupID: # The group ID of the Azure AD group used for the Otomi team admin role\n  tenantID: # The ID of the Azure tenant used\n")))}c.isMDXComponent=!0},176:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),c=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=c(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return n?o.a.createElement(m,u(u({ref:t},l),{},{components:n})):o.a.createElement(m,u({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);