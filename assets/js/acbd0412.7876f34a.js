"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7763],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=i,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||r;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7694:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const r={slug:"tutorial-10",title:"Creating a micro service architecture",sidebar_label:"Micro service architecture"},l=void 0,o={unversionedId:"tutorials/tutorial-10",id:"tutorials/tutorial-10",title:"Creating a micro service architecture",description:"In this tutorial we are going to deploy multiple services from different teams and expose them using a shared domain, but each on their own path. We will use on-the-fly Knative services for speed and simplicity.",source:"@site/docs/tutorials/tutorial-10.md",sourceDirName:"tutorials",slug:"/tutorials/tutorial-10",permalink:"/docs/tutorials/tutorial-10",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/tutorials/tutorial-10.md",tags:[],version:"current",frontMatter:{slug:"tutorial-10",title:"Creating a micro service architecture",sidebar_label:"Micro service architecture"}},p={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Conclusion",id:"conclusion",level:2}],m={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this tutorial we are going to deploy multiple services from different teams and expose them using a shared domain, but each on their own path. We will use on-the-fly Knative services for speed and simplicity."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"You are familiar with Knative"),(0,i.kt)("li",{parentName:"ol"},"Knative is enabled in Otomi. (Check the ",(0,i.kt)("inlineCode",{parentName:"li"},"Apps")," section under ",(0,i.kt)("inlineCode",{parentName:"li"},"Platform"),".)"),(0,i.kt)("li",{parentName:"ol"},"Two teams are created. We will refer to them as ",(0,i.kt)("inlineCode",{parentName:"li"},"alpha")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"beta"),". (It is not necessary to ",(0,i.kt)("inlineCode",{parentName:"li"},"Deploy")," first.)")),(0,i.kt)("h2",{id:"instructions"},"Instructions"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Select team ",(0,i.kt)("inlineCode",{parentName:"p"},"alpha")," in the top bar, select ",(0,i.kt)("inlineCode",{parentName:"p"},"Services")," from the ",(0,i.kt)("inlineCode",{parentName:"p"},"Team alpha")," menu section and click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Create Service"),", and choose ",(0,i.kt)("inlineCode",{parentName:"p"},"New knative service"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Provide the following values and ",(0,i.kt)("inlineCode",{parentName:"p"},"submit"),":"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name: ",(0,i.kt)("inlineCode",{parentName:"li"},"sir")),(0,i.kt)("li",{parentName:"ul"},"Run As User: ",(0,i.kt)("inlineCode",{parentName:"li"},"1001")),(0,i.kt)("li",{parentName:"ul"},"Repository: ",(0,i.kt)("inlineCode",{parentName:"li"},"otomi/nodejs-helloworld")),(0,i.kt)("li",{parentName:"ul"},"Tag: ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.12")),(0,i.kt)("li",{parentName:"ul"},"Limits: ",(0,i.kt)("inlineCode",{parentName:"li"},"CPU=100m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Memory=128Mi")),(0,i.kt)("li",{parentName:"ul"},"Requests: ",(0,i.kt)("inlineCode",{parentName:"li"},"CPU=50m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Memory=64Mi")),(0,i.kt)("li",{parentName:"ul"},"env: ",(0,i.kt)("inlineCode",{parentName:"li"},"TARGET=world, I just woke up!"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"SERVANTS=servant-1,servant-2")),(0,i.kt)("li",{parentName:"ul"},"Check ",(0,i.kt)("inlineCode",{parentName:"li"},"Scale to zero")),(0,i.kt)("li",{parentName:"ul"},"Exposure: ",(0,i.kt)("inlineCode",{parentName:"li"},"Ingress")),(0,i.kt)("li",{parentName:"ul"},"Uncheck ",(0,i.kt)("inlineCode",{parentName:"li"},"Use team domain")),(0,i.kt)("li",{parentName:"ul"},"host: ",(0,i.kt)("inlineCode",{parentName:"li"},"hello-multi")," (DNS zone can be left as-is)")),(0,i.kt)("p",null,"Click ",(0,i.kt)("inlineCode",{parentName:"p"},"Deploy")," to start the service and domain registration, as that might take time. Plus we want the service to go to sleep as we intend to wake it up later (it serves a purpose, hope you spot it later on ;)."),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Under the same team create the last ",(0,i.kt)("inlineCode",{parentName:"li"},"New knative service")," service with the same values but the following diff and ",(0,i.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name: ",(0,i.kt)("inlineCode",{parentName:"li"},"informant")),(0,i.kt)("li",{parentName:"ul"},"Exposure: ",(0,i.kt)("inlineCode",{parentName:"li"},"Cluster")),(0,i.kt)("li",{parentName:"ul"},"Leave ",(0,i.kt)("inlineCode",{parentName:"li"},"Scale to zero")," unchecked")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Under the same team create another ",(0,i.kt)("inlineCode",{parentName:"li"},"New knative service")," service  with the same values but with the following diff and ",(0,i.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name: ",(0,i.kt)("inlineCode",{parentName:"li"},"servant-1")),(0,i.kt)("li",{parentName:"ul"},"paths: ",(0,i.kt)("inlineCode",{parentName:"li"},"/servant-1")),(0,i.kt)("li",{parentName:"ul"},"env: ",(0,i.kt)("inlineCode",{parentName:"li"},"TARGET=sir"))),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Select team ",(0,i.kt)("inlineCode",{parentName:"li"},"beta")," and create a ",(0,i.kt)("inlineCode",{parentName:"li"},"New knative service")," service with the same values but the following diff and ",(0,i.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name: ",(0,i.kt)("inlineCode",{parentName:"li"},"servant-2")),(0,i.kt)("li",{parentName:"ul"},"paths: ",(0,i.kt)("inlineCode",{parentName:"li"},"/servant-2")),(0,i.kt)("li",{parentName:"ul"},"env: ",(0,i.kt)("inlineCode",{parentName:"li"},"TARGET=sir"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"INFORMANT=http://informant.team-alpha")," ")),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Now click ",(0,i.kt)("inlineCode",{parentName:"li"},"Deploy Changes")," again and watch the deployment finish in Drone.")),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"In effect what we have done is create the following workloads for team ",(0,i.kt)("inlineCode",{parentName:"p"},"alpha"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"master.team-alpha")," exposed via ",(0,i.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"servant-1.team-alpha")," exposed via ",(0,i.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain/servant-1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"informant.team-alpha")," not exposed publicly, but only able to receive requests from ",(0,i.kt)("inlineCode",{parentName:"li"},"servant-2.team-beta"),".")),(0,i.kt)("p",null,"And for team ",(0,i.kt)("inlineCode",{parentName:"p"},"beta"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"servant-2.team-beta")," exposed via ",(0,i.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain/servant-2"))),(0,i.kt)("p",null,"Bonus: Add network policies to make sure no unforeseen traffic is routed :)"))}u.isMDXComponent=!0}}]);