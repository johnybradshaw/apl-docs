"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8506],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),m=l,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2233:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),l=(r(7294),r(3905));const a={slug:"cluster",title:"Platform settings",sidebar_label:"Cluster"},o=void 0,s={unversionedId:"for-ops/console/settings/cluster",id:"for-ops/console/settings/cluster",title:"Platform settings",description:"Cluster",source:"@site/docs/for-ops/console/settings/cluster.md",sourceDirName:"for-ops/console/settings",slug:"/for-ops/console/settings/cluster",permalink:"/docs/for-ops/console/settings/cluster",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-ops/console/settings/cluster.md",tags:[],version:"current",frontMatter:{slug:"cluster",title:"Platform settings",sidebar_label:"Cluster"},sidebar:"mainSidebar",previous:{title:"Shell",permalink:"/docs/for-ops/console/shell"},next:{title:"Otomi",permalink:"/docs/for-ops/console/settings/otomi"}},i={},u=[{value:"Cluster",id:"cluster",level:2},{value:"Cluster",id:"cluster-1",level:3},{value:"Provider",id:"provider",level:3},{value:"Kubernetes version",id:"kubernetes-version",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"cluster"},"Cluster"),(0,l.kt)("p",null,"The Cluster section provides information about the Kubernetes cluster running Otomi."),(0,l.kt)("h3",{id:"cluster-1"},"Cluster"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Setting"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Configurable"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Short name that will be used in construction of cluster domain and messaging."),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Domain Suffix"),(0,l.kt)("td",{parentName:"tr",align:null},"Domain suffix for the cluster."),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"API Name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of cluster. On AWS this must match the exact EKS cluster name."),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"API Server"),(0,l.kt)("td",{parentName:"tr",align:null},"Add the full url of the kubernetes API server. This is used to generate the KUBECONFIG for local API access."),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Owner"),(0,l.kt)("td",{parentName:"tr",align:null},"A cluster owner. Used in alerts/reports to distinguish between resources for different customers."),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AWS Region"),(0,l.kt)("td",{parentName:"tr",align:null},"An AWS region. Used by charts such as cluster-autoscaler and aws-certs job. Example: eu-central-1"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h3",{id:"provider"},"Provider"),(0,l.kt)("p",null,"The provider used for this cluster"),(0,l.kt)("h3",{id:"kubernetes-version"},"Kubernetes version"),(0,l.kt)("p",null,"The version of the Kubernetes cluster running Otomi."))}p.isMDXComponent=!0}}]);