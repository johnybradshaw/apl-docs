"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[6505],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=d(a),c=n,h=s["".concat(p,".").concat(c)]||s[c]||m[c]||i;return a?r.createElement(h,o(o({ref:t},u),{},{components:a})):r.createElement(h,o({ref:t},u))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},162:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const i={slug:"part-14",title:"Configure Argo CD image updater",sidebar_label:"Part 14"},o=void 0,l={unversionedId:"for-devs/get-started/part-14",id:"for-devs/get-started/part-14",title:"Configure Argo CD image updater",description:"In the previous part, you have seen how to use Argo CD to automatically deploy applications by adding the Kubernetes manifests in to the gitops repo in Gitea. You can also use Argo CD to deploy Helm charts and automatically update the version of the deployed image.",source:"@site/docs/for-devs/get-started/part-14.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/part-14",permalink:"/docs/for-devs/get-started/part-14",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/part-14.md",tags:[],version:"current",frontMatter:{slug:"part-14",title:"Configure Argo CD image updater",sidebar_label:"Part 14"},sidebar:"mainSidebar",previous:{title:"Part 13",permalink:"/docs/for-devs/get-started/part-13"},next:{title:"Part 15",permalink:"/docs/for-devs/get-started/part-15"}},p={},d=[{value:"Upload a Helm chart to Harbor",id:"upload-a-helm-chart-to-harbor",level:2},{value:"Connect the repo in Argo CD",id:"connect-the-repo-in-argo-cd",level:2},{value:"Create a new Argo CD application",id:"create-a-new-argo-cd-application",level:2},{value:"Configure Argo CD Image Updater",id:"configure-argo-cd-image-updater",level:2}],u={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In the previous part, you have seen how to use Argo CD to automatically deploy applications by adding the Kubernetes manifests in to the gitops repo in Gitea. You can also use Argo CD to deploy Helm charts and automatically update the version of the deployed image."),(0,n.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)("p",{parentName:"div"},"Argo CD currently only supports the image update feature in combination with a Helm chart."))),(0,n.kt)("h2",{id:"upload-a-helm-chart-to-harbor"},"Upload a Helm chart to Harbor"),(0,n.kt)("p",null,"You can do this in the Harbor UI, or directly with the helm CLI:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Login to the team's OCI registry first, by using the push credentials for your team provided by the platform administrator.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm registry login -u 'otomi-team-demo-push' -p $token harbor.<your-domain>\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Upload the chart:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm push <chart-name>.tgz oci://harbor.<your-domain>/library/<chart-name>\n")),(0,n.kt)("h2",{id:"connect-the-repo-in-argo-cd"},"Connect the repo in Argo CD"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the apps section in Otomi console, click on the Argo CD app"),(0,n.kt)("li",{parentName:"ul"},"Open ",(0,n.kt)("inlineCode",{parentName:"li"},"Settings")," > ",(0,n.kt)("inlineCode",{parentName:"li"},"Repositories")),(0,n.kt)("li",{parentName:"ul"},"Choose ",(0,n.kt)("inlineCode",{parentName:"li"},"Connect Repo using https")),(0,n.kt)("li",{parentName:"ul"},"Fill in the following:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Type: Helm")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Name: Harbor")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Project: <team-name>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Repository URL: https://harbor.<your-domain>/chartrepo/library")))),(0,n.kt)("li",{parentName:"ul"},"Click ",(0,n.kt)("inlineCode",{parentName:"li"},"Connect"))),(0,n.kt)("h2",{id:"create-a-new-argo-cd-application"},"Create a new Argo CD application"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Select ",(0,n.kt)("inlineCode",{parentName:"li"},"Applications"),", and click on ",(0,n.kt)("inlineCode",{parentName:"li"},"Create")),(0,n.kt)("li",{parentName:"ul"},"Fill in the following:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Application Name: <your-app-name>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Project: <team-name>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Sync Policy: Automatic")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Repository URL: harbor.<your-domain>/chartrepo/library")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Chart: <chart-name>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Version: <version>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Cluster URL: https://kubernetes.default.svc")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Namespace: <team-name>")))),(0,n.kt)("li",{parentName:"ul"},"Click on ",(0,n.kt)("inlineCode",{parentName:"li"},"Create"))),(0,n.kt)("p",null,"You'll see that the chart is now automatically deployed."),(0,n.kt)("h2",{id:"configure-argo-cd-image-updater"},"Configure Argo CD Image Updater"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In Argo CD, go to applications and click on the new created application"),(0,n.kt)("li",{parentName:"ul"},"Click on ",(0,n.kt)("inlineCode",{parentName:"li"},"App Details")," and then ",(0,n.kt)("inlineCode",{parentName:"li"},"edit")),(0,n.kt)("li",{parentName:"ul"},"Under ",(0,n.kt)("inlineCode",{parentName:"li"},"Annotations"),", add the following annotation (example):")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'argocd-image-updater.argoproj.io/image-list: "otomi/nodejs-helloworld:~1.2"\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Now click ",(0,n.kt)("inlineCode",{parentName:"li"},"Save"))),(0,n.kt)("p",null,"In the example above, we used the ",(0,n.kt)("inlineCode",{parentName:"p"},"semver")," update strategy. Read more about the supported update strategies ",(0,n.kt)("a",{parentName:"p",href:"https://argocd-image-updater.readthedocs.io/en/stable/basics/update-strategies/"},"here")))}m.isMDXComponent=!0}}]);