"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[9620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={slug:"lab-3",title:"Create a private Git repo",sidebar_label:"Create GIT repos"},i=void 0,l={unversionedId:"get-started/labs/lab-3",id:"get-started/labs/lab-3",title:"Create a private Git repo",description:"As a developer you'll need a Git repository for your code. Most organizations will probably have a central code repository like Gitlab, or use Github. But if you don't, Otomi has you covered. Otomi includes a complete self-hosted Git solution called Gitea.",source:"@site/docs/get-started/labs/lab-3.md",sourceDirName:"get-started/labs",slug:"/get-started/labs/lab-3",permalink:"/docs/get-started/labs/lab-3",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/labs/lab-3.md",tags:[],version:"current",frontMatter:{slug:"lab-3",title:"Create a private Git repo",sidebar_label:"Create GIT repos"},sidebar:"mainSidebar",previous:{title:"Prerequisites",permalink:"/docs/get-started/labs/lab-1"},next:{title:"Build images",permalink:"/docs/get-started/labs/lab-6"}},s={},p=[{value:"Create the private repository",id:"create-the-private-repository",level:2}],c={toc:p};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"As a developer you'll need a Git repository for your code. Most organizations will probably have a central code repository like Gitlab, or use Github. But if you don't, Otomi has you covered. Otomi includes a complete self-hosted Git solution called Gitea."),(0,r.kt)("p",null,"As a team member, you can create and manage your own repositories."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Team members first have to sign in to Gitea (using OpenID), after which they are automatically added to the correct team.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi-admin")," account is unable to login with OpenID, this account needs to login with the user/password login form.")),(0,r.kt)("p",null,"In these labs we'll be using a Team called ",(0,r.kt)("inlineCode",{parentName:"p"},"labs")," and a user called ",(0,r.kt)("inlineCode",{parentName:"p"},"labs-user"),"."),(0,r.kt)("h2",{id:"create-the-private-repository"},"Create the private repository"),(0,r.kt)("p",null,"In the apps section in Otomi console, you'll see an app called Gitea. Click on it."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(1194).Z,width:"2930",height:"1916"})),(0,r.kt)("p",null,"Now follow these steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Sign In")," with OpenID")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(8379).Z,width:"2200",height:"1082"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"+ New Repository"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(9857).Z,width:"2926",height:"1224"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add the name ",(0,r.kt)("inlineCode",{parentName:"li"},"blue")," for the repository"),(0,r.kt)("li",{parentName:"ul"},"Optional: Enable ",(0,r.kt)("inlineCode",{parentName:"li"},"Initialize Repository")),(0,r.kt)("li",{parentName:"ul"},"Make Repository Private"),(0,r.kt)("li",{parentName:"ul"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Create Repository"))),(0,r.kt)("p",null,"Your repo is now ready to be used!"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(3471).Z,width:"2926",height:"1494"})),(0,r.kt)("p",null,"Add the following 2 files to the repository:"),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"Dockerfile"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Dockerfile"},"FROM nginxinc/nginx-unprivileged:stable\nCOPY blue.html /usr/share/nginx/html/index.html\nEXPOSE 8080\n")),(0,r.kt)("p",null,"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"blue.html"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <title>Sample Deployment</title>\n    <style>\n      body {\n        color: #ffffff;\n        background-color: blue;\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n      }\n      h1 {\n        font-size: 500%;\n        font-weight: normal;\n        margin-bottom: 0;\n      }\n      h2 {\n        font-size: 200%;\n        font-weight: normal;\n        margin-bottom: 0;\n      }\n    </style>\n  </head>\n  <body>\n    <div align="center">\n      <h1>Welcome to Blue</h1>\n    </div>\n  </body>\n</html>\n')),(0,r.kt)("p",null,"In the following labs we are going to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"blue")," repository, but we'll also need a ",(0,r.kt)("inlineCode",{parentName:"p"},"green")," repository. Create the ",(0,r.kt)("inlineCode",{parentName:"p"},"green")," repository and add the 2 files, but change ",(0,r.kt)("inlineCode",{parentName:"p"},"blue")," into ",(0,r.kt)("inlineCode",{parentName:"p"},"green"),"."))}d.isMDXComponent=!0},8379:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/gitea-openid-dca1d73e3512321edcd5fc9a3c290cb0.png"},3471:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/new-gitea-repo-ready-c7d9f13c78c08fbbec40d83ed7f59f45.png"},9857:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/new-gitea-repo-ae8b4ad9ecc7436acffaade0a79585d6.png"},1194:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/team-app-gitea-3e65e2076c06453640841d751ff8cce6.png"}}]);