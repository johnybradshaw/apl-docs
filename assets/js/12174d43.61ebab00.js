"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8479],{2625:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var s=t(5893),i=t(1151);const o={slug:"known-issues",title:"Known Installation Issues",sidebar_label:"Known Issues"},l=void 0,a={id:"get-started/installation/known-issues",title:"Known Installation Issues",description:"Metrics server does not start with untrusted Kube API certificates",source:"@site/docs/get-started/installation/known-issues.md",sourceDirName:"get-started/installation",slug:"/get-started/installation/known-issues",permalink:"/docs/get-started/installation/known-issues",draft:!1,unlisted:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/installation/known-issues.md",tags:[],version:"current",frontMatter:{slug:"known-issues",title:"Known Installation Issues",sidebar_label:"Known Issues"},sidebar:"mainSidebar",previous:{title:"Helm",permalink:"/docs/get-started/installation/helm"},next:{title:"OIDC",permalink:"/docs/get-started/installation/oidc"}},r={},c=[{value:"Metrics server does not start with untrusted Kube API certificates",id:"metrics-server-does-not-start-with-untrusted-kube-api-certificates",level:2},{value:"Namespaces stuck in terminating state when uninstalling Otomi",id:"namespaces-stuck-in-terminating-state-when-uninstalling-otomi",level:2},{value:"Installing Otomi with DNS fails due to failed authentication for Gitea",id:"installing-otomi-with-dns-fails-due-to-failed-authentication-for-gitea",level:2},{value:"Installing Otomi on Civo fails",id:"installing-otomi-on-civo-fails",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"metrics-server-does-not-start-with-untrusted-kube-api-certificates",children:"Metrics server does not start with untrusted Kube API certificates"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsx)(n.p,{children:"Metrics server will not start when installing on a K8s cluster (like on Minikube or a cluster created with Kubeadm) with Kube API using self-signed certificates"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"Add extra args to the metrics-service by using the following values when installing Otomi with Helm chart:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apps:\n  metrics-server:\n    enabled: true\n    _rawValues:\n      extraArgs:\n        kubelet-preferred-address-types: InternalIP\n        kubelet-insecure-tls: true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"namespaces-stuck-in-terminating-state-when-uninstalling-otomi",children:"Namespaces stuck in terminating state when uninstalling Otomi"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsxs)(n.p,{children:["When uninstalling Otomi using the ",(0,s.jsx)(n.code,{children:"helm unistall"})," cmd, all Otomi namespaces get stuck in a terminating state."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"The work around for now is to delete all namespaces using this cmd:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"for ns in $(kubectl get ns --field-selector status.phase=Terminating -o jsonpath='{.items[*].metadata.name}'); do  kubectl get ns $ns -ojson | jq '.spec.finalizers = []' | kubectl replace --raw \"/api/v1/namespaces/$ns/finalize\" -f -; done\n"})}),"\n",(0,s.jsx)(n.h2,{id:"installing-otomi-with-dns-fails-due-to-failed-authentication-for-gitea",children:"Installing Otomi with DNS fails due to failed authentication for Gitea"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsx)(n.p,{children:"When installing Otomi with DNS, the installations fails with the following error:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"otomi:cmd:commit:commitAndPush:error remote: Unauthorized\nfatal: Authentication failed for 'https://gitea.otomi.example.com/otomi/values.git/'\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"Provide a custom password:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"otomi:\n  adminPassword: yourpassword\n"})}),"\n",(0,s.jsx)(n.h2,{id:"installing-otomi-on-civo-fails",children:"Installing Otomi on Civo fails"}),"\n",(0,s.jsx)(n.p,{children:"There can be multiple issues when installing Otomi on Civo:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsxs)(n.p,{children:["Some pods get stuck in a ",(0,s.jsx)(n.code,{children:"pending"})," state during installation."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"Otomi installs K8s applications like KeyCloak and Gitea. These apps require persistent storage. Civo has default quota set on resources, including volumes. If a pod stays in a pending state, it might be caused by a quota limit. In Civo dashboard, check the amount of volumes and remove all volumes that are not in use. Also check in the amount of volumes did not reach a quota limit and request an increase when needed."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsx)(n.p,{children:"When installing Otomi using Civo market place on a Linux Talos cluster the Otomi installation fails."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"Installing Otomi on Civo Linux Talos is currently not supported. Try installing Otomi on Civo K3s."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Issue"})}),"\n",(0,s.jsxs)(n.p,{children:["Keycloak-01 pod is not able to start and the Keycloak logs show the following message: ",(0,s.jsx)(n.code,{children:'File "base/16385/PG_VERSION" does not contain valid data.'})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution"})}),"\n",(0,s.jsx)(n.p,{children:"This issue is still under investigation. For now, first run the following cmd:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl exec -it -n keycloak keycloak-db-1 -c postgres -- sh -c 'echo \"15\" > /var/lib/postgresql/data/pgdata/base/16385/PG_VERSION'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["and then delete the ",(0,s.jsx)(n.code,{children:"keycloak-0"})," pod:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"kubectl delete pod keycloak-0 -n keycloak\n"})}),"\n",(0,s.jsx)(n.p,{children:"Keycloak should now start."})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>l});var s=t(7294);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);