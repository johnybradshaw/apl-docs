"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5824],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?i.createElement(f,s(s({ref:t},p),{},{components:r})):i.createElement(f,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:n,s[1]=a;for(var c=2;c<o;c++)s[c]=r[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7981:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));const o={slug:"istio",title:"Istio",sidebar_label:"Istio"},s=void 0,a={unversionedId:"apps/istio",id:"apps/istio",title:"Istio",description:"Since Otomi has security best practices built in, it is designed for intrusion.",source:"@site/docs/apps/istio.md",sourceDirName:"apps",slug:"/apps/istio",permalink:"/docs/apps/istio",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/apps/istio.md",tags:[],version:"current",frontMatter:{slug:"istio",title:"Istio",sidebar_label:"Istio"},sidebar:"mainSidebar",previous:{title:"Ingress-nginx",permalink:"/docs/apps/ingress-nginx"},next:{title:"Jaeger",permalink:"/docs/apps/jaeger"}},l={},c=[{value:"Known issues",id:"known-issues",level:2},{value:"Stale Keycloak JWKS cache",id:"stale-keycloak-jwks-cache",level:3},{value:"Istio log errors",id:"istio-log-errors",level:3}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Since Otomi has security best practices built in, it is designed for intrusion.\nIstio is installed by Otomi as a service mesh to deliver the following capabilities:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"mTLS enforcement for all traffic that is deemed compromisable"),(0,n.kt)("li",{parentName:"ul"},"egress control, forcing teams to choose explicit egress endpoints"),(0,n.kt)("li",{parentName:"ul"},"advanced routing capabilities such as weight based load balancing (A/B or blue/green testing)")),(0,n.kt)("p",null,"In the future we might make it possible to opt out of Istio, but that effectively nullifies the mTLS capabilities and egress control."),(0,n.kt)("h2",{id:"known-issues"},"Known issues"),(0,n.kt)("h3",{id:"stale-keycloak-jwks-cache"},"Stale Keycloak JWKS cache"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Problem")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Jwks doesn't have key to match kid or alg from Jwt\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Cause")," The istio-proxy sidecar caches JWKS with a TTL of 20 minutes. The TTL is a hardcoded parameter (",(0,n.kt)("inlineCode",{parentName:"p"},"JwtPubKeyRefreshInterval"),") and cannot be configured. By redeploing keycloak ",(0,n.kt)("inlineCode",{parentName:"p"},"kid")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"alg")," can change, thus JWKS that is cached by istio-proxy sidecar is not valid anymore."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution")," Either wait 20 minutes, so JWKS is refreshed or kill all pods that are referenced by a RequestAuthentication resource. All services that have ",(0,n.kt)("inlineCode",{parentName:"p"},"authz.workload")," set will have one (see: core.yaml)."),(0,n.kt)("h3",{id:"istio-log-errors"},"Istio log errors"),(0,n.kt)("p",null,"When you see errors in the logs like such:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"error    authorization    skipped rule ns[monitoring]-policy[grafana-dev-eks-otomi-cloud]-rule[0]: :authority must not be used in TCP\n")),(0,n.kt)("p",null,"These are not real errors, but logged incorrectly: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/istio/istio/issues/24701#issuecomment-649719089"},"https://github.com/istio/istio/issues/24701#issuecomment-649719089")))}u.isMDXComponent=!0}}]);