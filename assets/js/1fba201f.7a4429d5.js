"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8587],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=l,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return a?n.createElement(k,o(o({ref:t},d),{},{components:a})):n.createElement(k,o({ref:t},d))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3133:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const r={slug:"lab-19",title:"Configuring network policies",sidebar_label:"Configure network policies"},o=void 0,i={unversionedId:"get-started/labs/lab-19",id:"get-started/labs/lab-19",title:"Configuring network policies",description:"In some cases you want to explicitly allow access to your application. This can be done by creating network policies. Otomi supports 2 types of network policies:",source:"@site/docs/get-started/labs/lab-19.md",sourceDirName:"get-started/labs",slug:"/get-started/labs/lab-19",permalink:"/docs/get-started/labs/lab-19",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/labs/lab-19.md",tags:[],version:"current",frontMatter:{slug:"lab-19",title:"Configuring network policies",sidebar_label:"Configure network policies"},sidebar:"mainSidebar",previous:{title:"Monitor services",permalink:"/docs/get-started/labs/lab-23"},next:{title:"Use OpenTelemery",permalink:"/docs/get-started/labs/lab-27"}},s={},p=[{value:"About network policies for internal ingress",id:"about-network-policies-for-internal-ingress",level:2},{value:"Configure network policies for the Example Voting App",id:"configure-network-policies-for-the-example-voting-app",level:2},{value:"Building the images",id:"building-the-images",level:3},{value:"Create a Redis cluster and a PostgreSQL database",id:"create-a-redis-cluster-and-a-postgresql-database",level:3},{value:"Deploy the Vote app",id:"deploy-the-vote-app",level:3},{value:"Deploy the Worker app",id:"deploy-the-worker-app",level:3},{value:"Deploy the Result app",id:"deploy-the-result-app",level:3},{value:"Register the services for Exposure and configure network policies",id:"register-the-services-for-exposure-and-configure-network-policies",level:3},{value:"Postgres database",id:"postgres-database",level:4},{value:"Redis",id:"redis",level:4},{value:"Vote",id:"vote",level:4},{value:"Result",id:"result",level:4},{value:"Test the app",id:"test-the-app",level:3}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"In some cases you want to explicitly allow access to your application. This can be done by creating network policies. Otomi supports 2 types of network policies:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Policies for ingress traffic inside the cluster"),(0,l.kt)("li",{parentName:"ul"},"Policies for egress traffic to go outside of the cluster (to access external FQDNs)")),(0,l.kt)("h2",{id:"about-network-policies-for-internal-ingress"},"About network policies for internal ingress"),(0,l.kt)("p",null,"The internal ingress network policies alllow you to:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Deny all traffic to the Pods of a Workload"),(0,l.kt)("li",{parentName:"ul"},"Allow selected Workload Pods running on the cluster to access your Workload's Pods")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Deny all")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Allow all")," we don't need to explain right?"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The Ingress Network Policies in Otomi rely on the ",(0,l.kt)("inlineCode",{parentName:"p"},"otomi.io/app")," label. All Workloads in Otomi need to use this label. When your using an Otomi quick start template from the Catalog, this label is always added.")),(0,l.kt)("p",null,"To allow other Workloads on the cluster to access your Workload's Pods, do the following:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"If the ",(0,l.kt)("inlineCode",{parentName:"strong"},"ClusterIP")," service of your workload has the same name as the ",(0,l.kt)("inlineCode",{parentName:"strong"},"otomi.io/app")," label value:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the Kubernetes ClusterIP service of the Workload as a Service in Otomi. If no public ingress is required, then just use the ",(0,l.kt)("inlineCode",{parentName:"li"},"Private")," Exposure option"),(0,l.kt)("li",{parentName:"ul"},"In the ",(0,l.kt)("inlineCode",{parentName:"li"},"Network policies")," section leave the ",(0,l.kt)("inlineCode",{parentName:"li"},"PodSelector")," field blanc"),(0,l.kt)("li",{parentName:"ul"},"In the ",(0,l.kt)("inlineCode",{parentName:"li"},"Ingress traffic inside the cluster")," select ",(0,l.kt)("inlineCode",{parentName:"li"},"Allow selected")),(0,l.kt)("li",{parentName:"ul"},"Add the team name (without ",(0,l.kt)("inlineCode",{parentName:"li"},"team-"),") and ",(0,l.kt)("inlineCode",{parentName:"li"},"otomi.io/app")," label value of the Workload Pods that are allowed access")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"If the ",(0,l.kt)("inlineCode",{parentName:"strong"},"ClusterIP")," service of your workload does NOT have the same name as the ",(0,l.kt)("inlineCode",{parentName:"strong"},"otomi.io/app")," label value:")),(0,l.kt)("p",null,"This is sometimes the case when a Workload has multiple ",(0,l.kt)("inlineCode",{parentName:"p"},"ClusterIP")," services. In this scenario you will only need to configure the network policies in one of the Workload services. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the Kubernetes ClusterIP service of the Workload as a Service in Otomi. If no public ingress is required, then just use the ",(0,l.kt)("inlineCode",{parentName:"li"},"Private")," Exposure option"),(0,l.kt)("li",{parentName:"ul"},"In the ",(0,l.kt)("inlineCode",{parentName:"li"},"Network policies")," section leave the ",(0,l.kt)("inlineCode",{parentName:"li"},"PodSelector")," add the ",(0,l.kt)("inlineCode",{parentName:"li"},"PodSelector"),'. Use a custom value for the "otomi.io/app:" label.'),(0,l.kt)("li",{parentName:"ul"},"In the ",(0,l.kt)("inlineCode",{parentName:"li"},"Ingress traffic inside the cluster")," select ",(0,l.kt)("inlineCode",{parentName:"li"},"Allow selected")),(0,l.kt)("li",{parentName:"ul"},"Add the team name (without ",(0,l.kt)("inlineCode",{parentName:"li"},"team-"),") and ",(0,l.kt)("inlineCode",{parentName:"li"},"otomi.io/app")," label value of the Workload Pods that are allowed access")),(0,l.kt)("h2",{id:"configure-network-policies-for-the-example-voting-app"},"Configure network policies for the Example Voting App"),(0,l.kt)("h3",{id:"building-the-images"},"Building the images"),(0,l.kt)("p",null,"Build the ",(0,l.kt)("inlineCode",{parentName:"p"},"Vote"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Worker")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Result")," images from this ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/redkubes/example-voting-app"},"repo"),"."),(0,l.kt)("p",null,"Use the Build feature in Otomi to build the images with ",(0,l.kt)("inlineCode",{parentName:"p"},"mode-Docker"),". Set the ",(0,l.kt)("inlineCode",{parentName:"p"},"path")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"./vote/Dockerfile")," for the Vote image (and ",(0,l.kt)("inlineCode",{parentName:"p"},"./worker/Dockerfile")," for the Worker and ",(0,l.kt)("inlineCode",{parentName:"p"},"./result/Dockerfile")," for Result)."),(0,l.kt)("h3",{id:"create-a-redis-cluster-and-a-postgresql-database"},"Create a Redis cluster and a PostgreSQL database"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"postgresql")," and the ",(0,l.kt)("inlineCode",{parentName:"p"},"redis")," charts from the Catalog to create a Redis master-replica cluster and a PostgreSQL database. For this lab, Redis authentication needs to be turned off by setting ",(0,l.kt)("inlineCode",{parentName:"p"},"auth.enabled=false"),"."),(0,l.kt)("h3",{id:"deploy-the-vote-app"},"Deploy the Vote app"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"k8s-deployment")," chart to deploy the vote app. Use the following values:"),(0,l.kt)("p",null,"Name: ",(0,l.kt)("inlineCode",{parentName:"p"},"vote")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: REDIS_HOST\n    value: <redis-cluster-name>-master\n")),(0,l.kt)("h3",{id:"deploy-the-worker-app"},"Deploy the Worker app"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"k8s-deployment")," chart to deploy the worker app. Use the following values:"),(0,l.kt)("p",null,"Name: ",(0,l.kt)("inlineCode",{parentName:"p"},"worker")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: DATABASE_USER\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: username\n  - name: DATABASE_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: password\n  - name: REDIS_HOST\n    value: <redis-cluster-name>-master\n  - name: DATABASE_HOST\n    value: <psql-cluster-name>-rw\n")),(0,l.kt)("h3",{id:"deploy-the-result-app"},"Deploy the Result app"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"k8s-deployment")," chart to deploy the result app. Use the following values:"),(0,l.kt)("p",null,"Name: ",(0,l.kt)("inlineCode",{parentName:"p"},"result")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: DATABASE_USER\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: username\n  - name: DATABASE_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: password\n  - name: DATABASE_HOST\n    value: <psql-cluster-name>-rw\n")),(0,l.kt)("h3",{id:"register-the-services-for-exposure-and-configure-network-policies"},"Register the services for Exposure and configure network policies"),(0,l.kt)("h4",{id:"postgres-database"},"Postgres database"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the ",(0,l.kt)("inlineCode",{parentName:"li"},"<workload-name>-rw")," Postgresql service"),(0,l.kt)("li",{parentName:"ul"},"Set exposure to ",(0,l.kt)("inlineCode",{parentName:"li"},"Private")," (default)"),(0,l.kt)("li",{parentName:"ul"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},"Network policies")," add the Pod Selector ",(0,l.kt)("inlineCode",{parentName:"li"},"<postgres-workload-name>")),(0,l.kt)("li",{parentName:"ul"},"Select ",(0,l.kt)("inlineCode",{parentName:"li"},"Allow selected")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<postgres-workload-name>")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<worker>")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<result>"))),(0,l.kt)("h4",{id:"redis"},"Redis"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the ",(0,l.kt)("inlineCode",{parentName:"li"},"<workload-name>-master")," Redis service "),(0,l.kt)("li",{parentName:"ul"},"Set exposure to ",(0,l.kt)("inlineCode",{parentName:"li"},"Private")," (default)"),(0,l.kt)("li",{parentName:"ul"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},"Network policies")," add the Pod Selector ",(0,l.kt)("inlineCode",{parentName:"li"},"<redis-workload-name>")),(0,l.kt)("li",{parentName:"ul"},"Select ",(0,l.kt)("inlineCode",{parentName:"li"},"Allow selected")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<redis-workload-name>")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<worker>")),(0,l.kt)("li",{parentName:"ul"},"Add From team name ",(0,l.kt)("inlineCode",{parentName:"li"},"<team-name>")," and From label value ",(0,l.kt)("inlineCode",{parentName:"li"},"<vote>"))),(0,l.kt)("h4",{id:"vote"},"Vote"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the ",(0,l.kt)("inlineCode",{parentName:"li"},"vote")," service "),(0,l.kt)("li",{parentName:"ul"},"Set exposure to ",(0,l.kt)("inlineCode",{parentName:"li"},"External"))),(0,l.kt)("h4",{id:"result"},"Result"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register the ",(0,l.kt)("inlineCode",{parentName:"li"},"<result>")," service "),(0,l.kt)("li",{parentName:"ul"},"Set exposure to ",(0,l.kt)("inlineCode",{parentName:"li"},"External"))),(0,l.kt)("h3",{id:"test-the-app"},"Test the app"),(0,l.kt)("p",null,"Go to the external URL of the ",(0,l.kt)("inlineCode",{parentName:"p"},"vote")," application. Click on ",(0,l.kt)("inlineCode",{parentName:"p"},"Cats")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Dogs"),". Now go to the external URL of the ",(0,l.kt)("inlineCode",{parentName:"p"},"result")," application. You should see the result of your vote."))}u.isMDXComponent=!0}}]);