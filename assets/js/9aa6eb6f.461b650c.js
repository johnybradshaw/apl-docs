"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7114],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),p=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=n,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||l;return r?a.createElement(f,o(o({ref:t},s),{},{components:r})):a.createElement(f,o({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3507:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={slug:"lab-12",title:"Deploy a BYO Helm chart",sidebar_label:"Lab 13"},o=void 0,i={unversionedId:"for-devs/get-started/lab-12",id:"for-devs/get-started/lab-12",title:"Deploy a BYO Helm chart",description:"Otomi offers a self-service feature to create 3 types of workloads:",source:"@site/docs/for-devs/get-started/lab-12.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-12",permalink:"/docs/for-devs/get-started/lab-12",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-12.md",tags:[],version:"current",frontMatter:{slug:"lab-12",title:"Deploy a BYO Helm chart",sidebar_label:"Lab 13"},sidebar:"mainSidebar",previous:{title:"Lab 11",permalink:"/docs/for-devs/get-started/lab-11"},next:{title:"Lab 13",permalink:"/docs/for-devs/get-started/lab-13"}},u={},p=[{value:"Creating a Workload to install your Helm chart",id:"creating-a-workload-to-install-your-helm-chart",level:2}],s={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Otomi offers a self-service feature to create 3 types of workloads:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Regular application: will use the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/redkubes/otomi-charts"},"Otomi deployment Helm chart")),(0,n.kt)("li",{parentName:"ul"},"Function as a Service: will use the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/redkubes/otomi-charts"},"Otomi Knative service Helm chart")),(0,n.kt)("li",{parentName:"ul"},"Bring your own Helm chart: use your own (custom) Helm chart")),(0,n.kt)("p",null,"In this Lab you're going to create a workload in Otomi to install your're own Helm chart and we'll be using the Otomi demo Hello World Nodejs Helm chart."),(0,n.kt)("h2",{id:"creating-a-workload-to-install-your-helm-chart"},"Creating a Workload to install your Helm chart"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Click on ",(0,n.kt)("inlineCode",{parentName:"p"},"Workloads")," in the left menu.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Select ",(0,n.kt)("inlineCode",{parentName:"p"},"Bring your own Helm chart"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Enter the following name for the workload"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"hello-world")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Enter the URL to the Git repo containing the Helm Chart or a Helm repository")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"https://github.com/redkubes/nodejs-helloworld")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add the Path of the chart within the repo:")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"chart/hello-world")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Click ",(0,n.kt)("inlineCode",{parentName:"p"},"Next"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"We are going to use the default chart values, so there is no need to fill in any values here")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Click ",(0,n.kt)("inlineCode",{parentName:"p"},"Submit")))),(0,n.kt)("p",null,"The values of a workload can be changed at any time. Changes will automatically be deployed."))}c.isMDXComponent=!0}}]);