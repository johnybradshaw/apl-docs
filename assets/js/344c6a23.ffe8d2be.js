"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[2358],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),p=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=p(n),c=r,b=h["".concat(d,".").concat(c)]||h[c]||s[c]||o;return n?i.createElement(b,l(l({ref:t},u),{},{components:n})):i.createElement(b,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var p=2;p<o;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const o={slug:"lab-26",title:"Trigger builds",sidebar_label:"Trigger builds"},l=void 0,a={unversionedId:"for-devs/get-started/lab-26",id:"for-devs/get-started/lab-26",title:"Trigger builds",description:"In the previous lab we created a build in Otomi using the blue repo in Gitea. In this lab we'll create a build for the green repo and trigger the build based on a webhook.",source:"@site/docs/for-devs/get-started/lab-26.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-26",permalink:"/docs/for-devs/get-started/lab-26",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-26.md",tags:[],version:"current",frontMatter:{slug:"lab-26",title:"Trigger builds",sidebar_label:"Trigger builds"},sidebar:"mainSidebar",previous:{title:"Build images",permalink:"/docs/for-devs/get-started/lab-6"},next:{title:"Create secrets",permalink:"/docs/for-devs/get-started/lab-8"}},d={},p=[{value:"Create a build in Otomi with Trigger enabled",id:"create-a-build-in-otomi-with-trigger-enabled",level:2},{value:"Get the webhook URL",id:"get-the-webhook-url",level:2},{value:"Create a Webhook",id:"create-a-webhook",level:2},{value:"Trigger the build",id:"trigger-the-build",level:2},{value:"Check the status of the build",id:"check-the-status-of-the-build",level:2}],u={toc:p};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In the previous lab we created a build in Otomi using the ",(0,r.kt)("inlineCode",{parentName:"p"},"blue")," repo in Gitea. In this lab we'll create a build for the ",(0,r.kt)("inlineCode",{parentName:"p"},"green")," repo and trigger the build based on a webhook."),(0,r.kt)("h2",{id:"create-a-build-in-otomi-with-trigger-enabled"},"Create a build in Otomi with Trigger enabled"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In the left menu, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Builds")),(0,r.kt)("li",{parentName:"ol"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Create Build")),(0,r.kt)("li",{parentName:"ol"},"Fill in the name ",(0,r.kt)("inlineCode",{parentName:"li"},"green")," for your build"),(0,r.kt)("li",{parentName:"ol"},"Choose ",(0,r.kt)("inlineCode",{parentName:"li"},"./Dockerfile")," and fill in the repo URL for the ",(0,r.kt)("inlineCode",{parentName:"li"},"green")," repo created in the previous lab."),(0,r.kt)("li",{parentName:"ol"},"Enable ",(0,r.kt)("inlineCode",{parentName:"li"},"Trigger")),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,r.kt)("h2",{id:"get-the-webhook-url"},"Get the webhook URL"),(0,r.kt)("p",null,"Before we can configure the webhook for the ",(0,r.kt)("inlineCode",{parentName:"p"},"green")," repo in Gitea, we will need the webhook URL. You can find this webhook URL for your build in the list of Builds. Add the webhook URL to your clipboard."),(0,r.kt)("h2",{id:"create-a-webhook"},"Create a Webhook"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Otomi Console, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"apps")," the left menu and then open ",(0,r.kt)("inlineCode",{parentName:"li"},"Gitea")),(0,r.kt)("li",{parentName:"ol"},"In the top menu of Gitea, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Explore")," and then on the ",(0,r.kt)("inlineCode",{parentName:"li"},"green")," repo"),(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," (top right) and then to ",(0,r.kt)("inlineCode",{parentName:"li"},"Webhooks")),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Add Webhook")," and select ",(0,r.kt)("inlineCode",{parentName:"li"},"Gitea")),(0,r.kt)("li",{parentName:"ol"},"In the ",(0,r.kt)("inlineCode",{parentName:"li"},"Target URL"),", paste the webhook URL from your clipboard."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Add Webhook"))),(0,r.kt)("h2",{id:"trigger-the-build"},"Trigger the build"),(0,r.kt)("p",null,"You can now trigger the build by doing a commit in the ",(0,r.kt)("inlineCode",{parentName:"p"},"green")," repo, or by testing the webhook. Let's test the webhook:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Gitea, go to the ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," (top right) of the ",(0,r.kt)("inlineCode",{parentName:"li"},"green")," repo and then to ",(0,r.kt)("inlineCode",{parentName:"li"},"Webhooks")),(0,r.kt)("li",{parentName:"ol"},"Click on the webhook we just created"),(0,r.kt)("li",{parentName:"ol"},"In the bottom, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Test Delivery"))),(0,r.kt)("h2",{id:"check-the-status-of-the-build"},"Check the status of the build"),(0,r.kt)("p",null,"The build should now have started. Based on the webhook, Tekton has now created a ",(0,r.kt)("inlineCode",{parentName:"p"},"PipelineRun"),". Let's check the status of the PipelineRun:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Otomi Console, click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Builds")),(0,r.kt)("li",{parentName:"ol"},"In the list of Builds, click on the ",(0,r.kt)("inlineCode",{parentName:"li"},"PipelineRun")," link of the ",(0,r.kt)("inlineCode",{parentName:"li"},"green")," build"),(0,r.kt)("li",{parentName:"ol"},"Tekton Dashboard will open and show a list of all the PipelineRuns"),(0,r.kt)("li",{parentName:"ol"},"Click on the PipelineRun with the name ",(0,r.kt)("inlineCode",{parentName:"li"},"docker-trigger-build-green-*")),(0,r.kt)("li",{parentName:"ol"},"You can now see the status of the build")))}s.isMDXComponent=!0}}]);