"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[1696],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||n;return r?o.createElement(h,l(l({ref:t},d),{},{components:r})):o.createElement(h,l({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<n;p++)l[p]=r[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2402:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var o=r(7462),a=(r(7294),r(3905));const n={slug:"lab-6",title:"Deploy workloads using Otomi",sidebar_label:"Lab 6"},l=void 0,i={unversionedId:"for-devs/get-started/lab-6",id:"for-devs/get-started/lab-6",title:"Deploy workloads using Otomi",description:"In the previous 2 parts we have explained how to deploy a workload with a BYO manifest using Kubectl and how to deploy a workload with a BYO manifest using ArgoCD in Otomi. In this part we'll deploy a workload using the Otomi Workloads feature.",source:"@site/docs/for-devs/get-started/lab-6.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-6",permalink:"/docs/for-devs/get-started/lab-6",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-6.md",tags:[],version:"current",frontMatter:{slug:"lab-6",title:"Deploy workloads using Otomi",sidebar_label:"Lab 6"},sidebar:"mainSidebar",previous:{title:"Lab 5",permalink:"/docs/for-devs/get-started/lab-5"},next:{title:"Lab 7",permalink:"/docs/for-devs/get-started/lab-7"}},s={},p=[{value:"Creating a Workload",id:"creating-a-workload",level:2}],d={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In the previous 2 parts we have explained how to deploy a workload with a BYO manifest using Kubectl and how to deploy a workload with a BYO manifest using ArgoCD in Otomi. In this part we'll deploy a workload using the Otomi Workloads feature."),(0,a.kt)("p",null,"When creating workloads in Otomi, the specifications (URL and path) and the values of a Helm chart is stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"otomi-values")," and then used to automatically create the ArgoCD resources to deploy the workload."),(0,a.kt)("h2",{id:"creating-a-workload"},"Creating a Workload"),(0,a.kt)("p",null,"You can create a workload to deploy your own Helm chart, or you can use one of the ",(0,a.kt)("inlineCode",{parentName:"p"},"otomi-charts")," Helm charts. In this case we'll use the deployment chart in the ",(0,a.kt)("inlineCode",{parentName:"p"},"otomi-charts")," repo."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Enter a name for the workload")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hello-deploy\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Enter the URL to the Git repo containing the Helm Chart or a Helm repository:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"https://github.com/redkubes/otomi-charts.git\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Enter the path of the chart")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deployment\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Enter the revision. In case of using a Git repo, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of using a Chart repository, this is a semver tag for the Chart's version"),(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,a.kt)("p",null,"After submitting the new workload specs, the values editor will be shown. Here you can edit the chart values."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Click on ",(0,a.kt)("inlineCode",{parentName:"li"},"Edit")),(0,a.kt)("li",{parentName:"ol"},"Add the following (minimal) values:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"fullnameOverride: hello-deploy\nimage:\n  repository: otomi/nodejs-helloworld\n  tag: v1.2.13\nservicePorts:\n  - port: 80\n    targetPort: http\n    protocol: TCP\n    name: http\ncontainerPorts:\n  - name: http\n    containerPort: 8080\n    protocol: TCP\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,a.kt)("p",null,"Now click on ",(0,a.kt)("inlineCode",{parentName:"p"},"Deploy Changes")),(0,a.kt)("p",null,"After a few minutes, Otomi will have created all the needed ArgoCD resources to deploy your workload. In the workloads list, click on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Application")," link of your workload to see the status of your workload."),(0,a.kt)("p",null,"The values of a workload can be changed at any time. Changes will automatically be deployed."))}c.isMDXComponent=!0}}]);