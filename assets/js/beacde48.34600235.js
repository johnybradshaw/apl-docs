"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[4890],{4904:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=a(5893),s=a(1151);const i={slug:"scaleway",title:"Scaleway",sidebar_label:"Scaleway"},l="Install Otomi on Scaleway Kubernetes Kapsule with Scaleway DNS",o={id:"get-started/installation/scaleway",title:"Scaleway",description:"Prerequisites",source:"@site/docs/get-started/installation/scaleway.md",sourceDirName:"get-started/installation",slug:"/get-started/installation/scaleway",permalink:"/docs/get-started/installation/scaleway",draft:!1,unlisted:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/installation/scaleway.md",tags:[],version:"current",frontMatter:{slug:"scaleway",title:"Scaleway",sidebar_label:"Scaleway"},sidebar:"mainSidebar",previous:{title:"Linode",permalink:"/docs/get-started/installation/linode"},next:{title:"Vultr",permalink:"/docs/get-started/installation/vultr"}},r={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Kubernetes Kapsule cluster",id:"create-a-kubernetes-kapsule-cluster",level:2},{value:"Configure DNS",id:"configure-dns",level:2},{value:"Importing a Domain into Scaleway DNS",id:"importing-a-domain-into-scaleway-dns",level:3},{value:"Creating Scaleway Credentials",id:"creating-scaleway-credentials",level:3},{value:"Create the values.yaml file",id:"create-the-valuesyaml-file",level:2},{value:"Install Otomi",id:"install-otomi",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"install-otomi-on-scaleway-kubernetes-kapsule-with-scaleway-dns",children:"Install Otomi on Scaleway Kubernetes Kapsule with Scaleway DNS"}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/scaleway/scaleway-cli",children:"Scaleway CLI"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"Helm"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"create-a-kubernetes-kapsule-cluster",children:"Create a Kubernetes Kapsule cluster"}),"\n",(0,t.jsx)(n.p,{children:"Set the Project ID variable:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'SCW_DEFAULT_PROJECT_ID=""\n'})}),"\n",(0,t.jsx)(n.p,{children:"And run the following commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'SCALEWAY_CLUSTER_NAME="otomi"\nSCALEWAY_NODE_TYPE="PRO2-M"\nSCALEWAY_NODE_POOL_MIN_SIZE=3\nSCALEWAY_K8s_VERSION="1.27.6"\nSCALEWAY_PRIVATE_NETWORK_ID=$(scw vpc private-network create project-id=$SCW_DEFAULT_PROJECT_ID name=$SCALEWAY_CLUSTER_NAME-pn region=nl-ams -ojson | jq -r .id)\nscw k8s cluster create name=$SCALEWAY_CLUSTER_NAME \\\n    project-id=$SCW_DEFAULT_PROJECT_ID \\\n    private-network-id=$SCALEWAY_PRIVATE_NETWORK_ID \\\n    auto-upgrade.enable=false \\\n    cni=calico \\\n    pools.0.node-type=$SCALEWAY_NODE_TYPE \\\n    pools.0.min-size=$SCALEWAY_NODE_POOL_MIN_SIZE \\\n    pools.0.size=$SCALEWAY_NODE_POOL_MIN_SIZE \\\n    pools.0.max-size=3 \\\n    pools.0.autohealing=true \\\n    pools.0.autoscaling=true \\\n    pools.0.name=$SCALEWAY_CLUSTER_NAME \\\n    pools.0.root-volume-size=50GB \\\n    version=$SCALEWAY_K8s_VERSION \\\n    region=nl-ams\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configure-dns",children:"Configure DNS"}),"\n",(0,t.jsx)(n.admonition,{title:"AlERT",type:"info",children:(0,t.jsx)(n.p,{children:"Support for Scaleway DNS is coming soon!"})}),"\n",(0,t.jsx)(n.h3,{id:"importing-a-domain-into-scaleway-dns",children:"Importing a Domain into Scaleway DNS"}),"\n",(0,t.jsxs)(n.p,{children:["In order to use your domain, you need to import it into Scaleway DNS. If it's not already done, you can follow ",(0,t.jsx)(n.a,{href:"https://www.scaleway.com/en/docs/scaleway-dns/",children:"this documentation"})]}),"\n",(0,t.jsx)(n.p,{children:"Once the domain is imported you can either use the root zone, or create a subzone to use."}),"\n",(0,t.jsxs)(n.p,{children:["In this example we will use ",(0,t.jsx)(n.code,{children:"example.com"})," as an example."]}),"\n",(0,t.jsx)(n.h3,{id:"creating-scaleway-credentials",children:"Creating Scaleway Credentials"}),"\n",(0,t.jsxs)(n.p,{children:["To use Otomi with Scaleway DNS, you need to create an API token (composed of the Access Key and the Secret Key).\nYou can either use existing ones or you can create a new token, as explained in ",(0,t.jsx)(n.a,{href:"https://www.scaleway.com/en/docs/generate-an-api-token/",children:"How to generate an API token"})," or directly by going to the ",(0,t.jsx)(n.a,{href:"https://console.scaleway.com/account/organization/credentials",children:"credentials page"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Add the Access ans Secret key's to your environment variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'SCW_ACCESS_KEY="<your-access-key>"\nSCW_SECRET_KEY="your-secret-key"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"create-the-valuesyaml-file",children:"Create the values.yaml file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tee values.yaml<<EOF\ncluster:\n  name: otomi\n  provider: scaleway\n  domainSuffix: your-sub-domain.example.com\notomi:\n  hasExternalDNS: true\ndns:\n  domainFilters: \n    - example.com\n  provider:\n    scaleway:\n      scwAccessKey: $SCW_ACCESS_KEY\n      scwSecretKey: $SCW_SECRET_KEY\napps:\n  cert-manager:\n    issuer: letsencrypt\n    stage: production\n    email: admin@example.com\nEOF\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And adjust the ",(0,t.jsx)(n.code,{children:"domainSuffix"}),", ",(0,t.jsx)(n.code,{children:"domainFilters"})," and ",(0,t.jsx)(n.code,{children:"email"})," based on your domain."]}),"\n",(0,t.jsx)(n.h2,{id:"install-otomi",children:"Install Otomi"}),"\n",(0,t.jsx)(n.p,{children:"Install Otomi using Helm:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add otomi https://otomi.io/otomi-core\nhelm repo update\nhelm install -f values.yaml otomi otomi/otomi\n"})}),"\n",(0,t.jsx)(n.p,{children:"Monitor the logs of the installer job:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl logs jobs/otomi -n default -f\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When the installer is finished, copy the ",(0,t.jsx)(n.code,{children:"url"})," and ",(0,t.jsx)(n.code,{children:"admin-password"})," from the console output."]}),"\n",(0,t.jsxs)(n.p,{children:["Follow the activation steps ",(0,t.jsx)(n.a,{href:"https://otomi.io/docs/get-started/activation",children:"here."})]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Like to learn how to use Otomi? Go through the ",(0,t.jsx)(n.a,{href:"/docs/get-started/labs/overview",children:"Get Started labs"})]})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>l});var t=a(7294);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);