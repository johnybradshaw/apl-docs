"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7754],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),g=i,f=d["".concat(c,".").concat(g)]||d[g]||l[g]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9082:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],s={slug:"apps/ingress-nginx",title:"Working with Ingress NGINX",sidebar_label:"Ingress-NGINX"},c=void 0,u={unversionedId:"app-ingress-nginx",id:"app-ingress-nginx",title:"Working with Ingress NGINX",description:"Otomi integrated Ingress NGINX into an advanced ingress architecture.",source:"@site/docs/app-ingress-nginx.md",sourceDirName:".",slug:"/apps/ingress-nginx",permalink:"/docs/apps/ingress-nginx",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/app-ingress-nginx.md",tags:[],version:"current",frontMatter:{slug:"apps/ingress-nginx",title:"Working with Ingress NGINX",sidebar_label:"Ingress-NGINX"},sidebar:"mainSidebar",previous:{title:"Gatekeeper",permalink:"/docs/apps/gatekeeper"},next:{title:"Prometheus",permalink:"/docs/apps/prometheus"}},p={},l=[{value:"ModSecurity with OWASP rule set",id:"modsecurity-with-owasp-rule-set",level:2}],d={toc:l};function g(e){var n=e.components,s=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Otomi integrated Ingress NGINX into an advanced ",(0,o.kt)("a",{parentName:"p",href:"/about/architecture#ingress--sso"},"ingress architecture"),"."),(0,o.kt)("h2",{id:"modsecurity-with-owasp-rule-set"},"ModSecurity with OWASP rule set"),(0,o.kt)("p",null,"By deafault, ModSecurity with OWASP filtering is not enabled in Nginx."),(0,o.kt)("p",null,"To turn on ModSecurity with OWASP filtering, click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Ingress-NGINX")," app in the apps section under Platform en then click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Values"),". Here you can change the ingress-nginx configuration:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"NGINX Modsecurity",src:t(3551).Z,width:"1962",height:"624"})),(0,o.kt)("p",null,"When enabled, ModSecurity is by default configured in blocking mode. This can have a negative impact on your application. First turn blocking of and adjust your application accordingly. Teams can see all ModSecurity warnings using Grafana. A shortcut for this dashboard is allready preconfigured."))}g.isMDXComponent=!0},3551:function(e,n,t){n.Z=t.p+"assets/images/mod-security-e4730596b80c0dd06dd65a98068c7011.png"}}]);