(self.webpackChunkotomi_docs=self.webpackChunkotomi_docs||[]).push([[2937],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),f=n,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return r?a.createElement(m,i(i({ref:t},l),{},{components:r})):a.createElement(m,i({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3335:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var a=r(2122),n=r(9756),o=(r(7294),r(3905)),i=["components"],s={slug:"apps/vault",title:"Working with Hashicorp Vault",sidebar_label:"Hashicorp Vault"},u={unversionedId:"app-vault",id:"app-vault",isDocsHomePage:!1,title:"Working with Hashicorp Vault",description:"Vault is a tool for safe use of secrets. A secret is something (e.g. a password) to which you want to restrict access and to be able to find out who used which secret based on an audit log. Read more about Vault here",source:"@site/docs/app-vault.md",sourceDirName:".",slug:"/apps/vault",permalink:"/docs/apps/vault",editUrl:"https://github.com/redkubes/redkubes/tree/master/docs/app-vault.md",version:"current",sidebar_label:"Hashicorp Vault",frontMatter:{slug:"apps/vault",title:"Working with Hashicorp Vault",sidebar_label:"Hashicorp Vault"},sidebar:"mainSidebar",previous:{title:"Working with Kubeapps",permalink:"/docs/apps/kubeapps"},next:{title:"Working with Gatekeeper Operator",permalink:"/docs/apps/gatekeeper"}},c=[],l={toc:c};function p(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Vault is a tool for safe use of secrets. A secret is something (e.g. a password) to which you want to restrict access and to be able to find out who used which secret based on an audit log. Read more about Vault ",(0,o.kt)("a",{parentName:"p",href:"https://www.vaultproject.io/docs/what-is-vault"},"here")),(0,o.kt)("p",null,"HashiCorp Vault is a shared application for securely storing and managing secrets. Vault has been made tennant aware in Otomi. When Vault is enabled, each team will automatically be provided with a space in Vault and is only allowed to see and manage secrets owned by the team. Vault uses the generic Otomi integration options for user management. Based on the roles in Otomi, users get access to a space in Vault. A team user automatically gains access to the secrets of the team. The authentication (via OIDC) is also integrated offering SSO."),(0,o.kt)("p",null,"Vault (like all parts of Otomi) runs natively on Kubernetes. To prevent data from Vault being lost during a rolling cluster upgrade, data persistence can be configured in combination with external (blob) storage. Read more ",(0,o.kt)("a",{parentName:"p",href:"https://www.vaultproject.io/docs/configuration/storage/azure"},"here")," for configuring data persistence for Vault on Azure."))}p.isMDXComponent=!0}}]);