"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[27],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var o=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)a=l[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)a=l[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=o.createContext({}),s=function(e){var t=o.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},d=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(a),m=r,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||l;return a?o.createElement(g,n(n({ref:t},d),{},{components:a})):o.createElement(g,n({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,n=new Array(l);n[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,n[1]=i;for(var s=2;s<l;s++)n[s]=a[s];return o.createElement.apply(null,n)}return o.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4462:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=a(7462),r=(a(7294),a(3905));const l={slug:"lab-13",title:"Deploy workloads using Otomi",sidebar_label:"Create workloads"},n=void 0,i={unversionedId:"for-devs/get-started/lab-13",id:"for-devs/get-started/lab-13",title:"Deploy workloads using Otomi",description:"In the previous lab we explained how to deploy a workload with using Argo CD in Otomi. In this part we'll deploy a regular workload (a Kubernetes Deployment) using the Otomi Developer Catalog.",source:"@site/docs/for-devs/get-started/lab-13.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-13",permalink:"/docs/for-devs/get-started/lab-13",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-13.md",tags:[],version:"current",frontMatter:{slug:"lab-13",title:"Deploy workloads using Otomi",sidebar_label:"Create workloads"},sidebar:"mainSidebar",previous:{title:"BYO manifests",permalink:"/docs/for-devs/get-started/lab-10"},next:{title:"Configure auto image updater",permalink:"/docs/for-devs/get-started/lab-11"}},p={},s=[{value:"About the Developer Catalog",id:"about-the-developer-catalog",level:2},{value:"Create a Workload from the Developer Catalog",id:"create-a-workload-from-the-developer-catalog",level:2}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In the previous lab we explained how to deploy a workload with using Argo CD in Otomi. In this part we'll deploy a regular workload (a Kubernetes Deployment) using the Otomi Developer Catalog."),(0,r.kt)("p",null,"The Otomi Developer Catalog allows to store any Helm chart in the ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi/charts")," git repository at Gitea. By deploying a given Helm chart from the catalog, Otomi saves the corresponding Helm chart values in a separate file the ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi/values")," repo. Otomi configures ArgoCD to observe that file and automatically deploy changes upon file change (GitOps)."),(0,r.kt)("h2",{id:"about-the-developer-catalog"},"About the Developer Catalog"),(0,r.kt)("p",null,"The Developer Catalog in Otomi is a curated list of Helm charts that can be used in workloads to create Kubernetes resources. The catalog by default only contains a set of Otomi quick start Helm charts."),(0,r.kt)("h2",{id:"create-a-workload-from-the-developer-catalog"},"Create a Workload from the Developer Catalog"),(0,r.kt)("p",null,"Before creating a workload from the developer catalog, we'll need the ",(0,r.kt)("inlineCode",{parentName:"p"},"repository")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"tag")," of the image to use. Go to the list of Builds and add the ",(0,r.kt)("inlineCode",{parentName:"p"},"repository")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"blue")," build to your clipboard. Remember that the tag is ",(0,r.kt)("inlineCode",{parentName:"p"},"latest"),"."),(0,r.kt)("p",null,"You can create a workload from the developer catalog:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go to ",(0,r.kt)("inlineCode",{parentName:"p"},"Workloads")," in the left menu and click on ",(0,r.kt)("inlineCode",{parentName:"p"},"New Workload"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the Name ",(0,r.kt)("inlineCode",{parentName:"p"},"blue")," for the workload")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi-quickstart-k8s-deployment")," from the catalog")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Leave the ",(0,r.kt)("inlineCode",{parentName:"p"},"Auto image updater")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Disabled"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the workload ",(0,r.kt)("inlineCode",{parentName:"p"},"values"),", change the following parameters:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"image:\n  repository: <paste from clipboard>\n  tag: latest\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,r.kt)("p",null,"Now click on ",(0,r.kt)("inlineCode",{parentName:"p"},"Deploy Changes")),(0,r.kt)("p",null,"After a few minutes, Otomi will have created all the needed Argo CD resources to deploy your workload. In the workloads list, click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Application")," link of your workload to see the status of your workload in Argo CD."),(0,r.kt)("p",null,"The values of a workload can be changed at any time. Changes will be deployed automatically."))}u.isMDXComponent=!0}}]);