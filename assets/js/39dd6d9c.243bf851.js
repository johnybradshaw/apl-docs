"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8621],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={slug:"lab-10",title:"BYO manifest to deploy a workload with Argo CD",sidebar_label:"Using Argo CD"},i=void 0,l={unversionedId:"for-devs/get-started/lab-10",id:"for-devs/get-started/lab-10",title:"BYO manifest to deploy a workload with Argo CD",description:"Prerequisite: For this lab, Argo CD needs to be activated.",source:"@site/docs/for-devs/get-started/lab-10.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-10",permalink:"/docs/for-devs/get-started/lab-10",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-10.md",tags:[],version:"current",frontMatter:{slug:"lab-10",title:"BYO manifest to deploy a workload with Argo CD",sidebar_label:"Using Argo CD"},sidebar:"mainSidebar",previous:{title:"Create secrets",permalink:"/docs/for-devs/get-started/lab-8"},next:{title:"Use auto image updater",permalink:"/docs/for-devs/get-started/lab-11"}},s={},p=[{value:"Using ArgoCD to deploy manifests and charts",id:"using-argocd-to-deploy-manifests-and-charts",level:2}],c={toc:p};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Prerequisite: For this lab, Argo CD needs to be activated.")),(0,r.kt)("p",null,"Deploying your applications by doing ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl apply -f")," is not ideal. You as a developer would like to automatically deploy and update your application after a new build. Otomi integrated Argo CD to provide an out-of-the-box gitops solution."),(0,r.kt)("h2",{id:"using-argocd-to-deploy-manifests-and-charts"},"Using ArgoCD to deploy manifests and charts"),(0,r.kt)("p",null,"In the apps section in Otomi console, you'll see an app called Argo CD. Click on it."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(9530).Z,width:"3050",height:"1732"})),(0,r.kt)("p",null,"In Argo CD you'll see that an Argo app has already been created for your team. This app is configured to synchronize any manifest that is in the created repo in Gitea for Argo."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(4536).Z,width:"2328",height:"1264"})),(0,r.kt)("p",null,"If you click on the app and then click on ",(0,r.kt)("inlineCode",{parentName:"p"},"APP DETAILS"),", you'll see the ",(0,r.kt)("inlineCode",{parentName:"p"},"REPO URL")," and also that the ",(0,r.kt)("inlineCode",{parentName:"p"},"SYNC POLICY")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"ENABLE AUTO-SYNC"),"."),(0,r.kt)("p",null,"Go back to the console and click on the Gitea app in the apps section. In the list of repo's you'll now see a new repo called ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi/team-<name>-argocd"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(2195).Z,width:"2322",height:"1100"})),(0,r.kt)("p",null,"To show the power of Argo CD, let's add a manifest to the repo and see what happens."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a new file in the repo called ",(0,r.kt)("inlineCode",{parentName:"li"},"deploy-nginx.yaml")," "),(0,r.kt)("li",{parentName:"ul"},"Add the following contents to the file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      annotations:\n        policy.otomi.io/ignore-sidecar: container-limits,psp-allowed-users\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginxinc/nginx-unprivileged:stable\n          resources:\n            limits:\n              memory: '128Mi'\n              cpu: '200m'\n            requests:\n              memory: '64Mi'\n              cpu: '100m'\n          securityContext:\n            runAsUser: 1001\n          ports:\n            - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n    - port: 80\n      targetPort: 8080\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Commit Changes")),(0,r.kt)("p",null,"Now go back to the Argo CD application and click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"team<name>")," application. You can see that all the Kubernetes resources have been created."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"kubecfg",src:n(7753).Z,width:"2328",height:"1334"})))}d.isMDXComponent=!0},4536:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/argo-team-app-bf528e566f14e5b932c3e6b19d576bd7.png"},2195:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/argo-team-repo-8e32c2e3934576878bc6351475ac8db6.png"},7753:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/argo-team-sync-17ef01cdd07ce5828cdbc2943dd49105.png"},9530:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/team-app-argo-bdb282ef14a2fcd66c77604b558cd66a.png"}}]);