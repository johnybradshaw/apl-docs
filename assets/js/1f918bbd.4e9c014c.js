"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[3635],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=p(n),c=r,g=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return n?a.createElement(g,i(i({ref:e},u),{},{components:n})):a.createElement(g,i({ref:e},u))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8816:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={slug:"oidc",title:"Azure AD for OIDC",sidebar_label:"OIDC"},i=void 0,o={unversionedId:"get-started/installation/oidc",id:"get-started/installation/oidc",title:"Azure AD for OIDC",description:"The authentication of brokered identities through Azure AD requires a service principal with certain Azure AD API permissions. An app registration needs to be created with the following API permissions:",source:"@site/docs/get-started/installation/oidc.md",sourceDirName:"get-started/installation",slug:"/get-started/installation/oidc",permalink:"/docs/get-started/installation/oidc",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/installation/oidc.md",tags:[],version:"current",frontMatter:{slug:"oidc",title:"Azure AD for OIDC",sidebar_label:"OIDC"},sidebar:"mainSidebar",previous:{title:"Known Issues",permalink:"/docs/get-started/installation/known-issues"},next:{title:"KMS",permalink:"/docs/get-started/installation/kms"}},s={},p=[],u={toc:p};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The authentication of brokered identities through Azure AD requires a service principal with certain Azure AD API permissions. An app registration needs to be created with the following API permissions:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"API / Permission name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft Graph / email"),(0,r.kt)("td",{parentName:"tr",align:null},"Delegated"),(0,r.kt)("td",{parentName:"tr",align:null},"View users' email address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft Graph / openid"),(0,r.kt)("td",{parentName:"tr",align:null},"Delegated"),(0,r.kt)("td",{parentName:"tr",align:null},"Sign users in")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft Graph / profile"),(0,r.kt)("td",{parentName:"tr",align:null},"Delegated"),(0,r.kt)("td",{parentName:"tr",align:null},"View users' basic profile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft Graph / User.Read"),(0,r.kt)("td",{parentName:"tr",align:null},"Delegated"),(0,r.kt)("td",{parentName:"tr",align:null},"Sign in and read user profile")))),(0,r.kt)("p",null,"And the following token configurations:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Claim"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Token type"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional settings"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"family_name"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides the last name, surename, or family name"),(0,r.kt)("td",{parentName:"tr",align:null},"ID"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"given_name"),(0,r.kt)("td",{parentName:"tr",align:null},'Provides the first or "give" name of the user'),(0,r.kt)("td",{parentName:"tr",align:null},"ID"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"groups"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional formatting for group claims"),(0,r.kt)("td",{parentName:"tr",align:null},"ID, Access, SAML"),(0,r.kt)("td",{parentName:"tr",align:null},"Default")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"upn"),(0,r.kt)("td",{parentName:"tr",align:null},"An identifier for the user that can be used ..."),(0,r.kt)("td",{parentName:"tr",align:null},"ID"),(0,r.kt)("td",{parentName:"tr",align:null},"Default")))),(0,r.kt)("p",null,"Note that the group type should be set to 'security groups'."),(0,r.kt)("p",null,'At the \'Authentication\' tab you should be able to set the following callback URL\xa7s and enable that both "Access tokens" and "ID tokens" are issued and public client flows are allowed:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://keycloak.<dns-zone-name>/realms/master/broker/otomi-idp/endpoint")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://keycloak.<dns-zone-name>"))),(0,r.kt)("p",null,"To install Otomi with Azure Active Directory as an IdP instead of (default) using Keycloak as an IdP, use the following values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'oidc:\n  clientID: ""\n  clientSecret: ""\n  issuer: ""\n  # IDP group id used to identify global admin\n  adminGroupID: ""\n  # IDP group id used to identify team admin\n  teamAdminGroupID: ""\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"otomi-idp")," is the default KeyCloak alias (shown as login title). To use another alias, add the following to the chart values:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apps:\n  keycloak:\n    idp:\n      alias: <your-alias>\n"))))}d.isMDXComponent=!0}}]);