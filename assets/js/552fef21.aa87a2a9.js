"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7754],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=i,f=d["".concat(c,".").concat(g)]||d[g]||l[g]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9082:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return l}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={slug:"apps/ingress-nginx",title:"Working with Ingress NGINX",sidebar_label:"Ingress-NGINX"},c=void 0,u={unversionedId:"app-ingress-nginx",id:"app-ingress-nginx",title:"Working with Ingress NGINX",description:"Otomi integrated Ingress NGINX into an advanced ingress architecture.",source:"@site/docs/app-ingress-nginx.md",sourceDirName:".",slug:"/apps/ingress-nginx",permalink:"/docs/apps/ingress-nginx",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/app-ingress-nginx.md",tags:[],version:"current",frontMatter:{slug:"apps/ingress-nginx",title:"Working with Ingress NGINX",sidebar_label:"Ingress-NGINX"},sidebar:"mainSidebar",previous:{title:"Gatekeeper",permalink:"/docs/apps/gatekeeper"},next:{title:"Prometheus",permalink:"/docs/apps/prometheus"}},p={},l=[{value:"ModSecurity with OWASP rule set",id:"modsecurity-with-owasp-rule-set",level:2}],d={toc:l};function g(e){var t=e.components,s=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Otomi integrated Ingress NGINX into an advanced ",(0,o.kt)("a",{parentName:"p",href:"/about/architecture#ingress--sso"},"ingress architecture"),"."),(0,o.kt)("h2",{id:"modsecurity-with-owasp-rule-set"},"ModSecurity with OWASP rule set"),(0,o.kt)("p",null,"By deafault, ModSecurity with OWASP filtering is not enabled in Nginx."),(0,o.kt)("p",null,"To turn on ModSecurity with OWASP filtering, click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Ingress-NGINX")," app in the apps section under Platform en then click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Values"),". Here you can change the ingress-nginx configuration:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"NGINX Modsecurity",src:n(3551).Z,width:"1962",height:"624"})),(0,o.kt)("p",null,"When enabled, ModSecurity is by default configured in blocking mode. This can have a negative impact on your application. First turn blocking of and adjust your application accordingly. Teams can see all ModSecurity warnings using Grafana. A shortcut for this dashboard is allready preconfigured."))}g.isMDXComponent=!0},3551:function(e,t,n){t.Z=n.p+"assets/images/mod-security-e4730596b80c0dd06dd65a98068c7011.png"}}]);