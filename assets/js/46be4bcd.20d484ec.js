"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7973],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||n;return r?o.createElement(k,l(l({ref:t},u),{},{components:r})):o.createElement(k,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<n;c++)l[c]=r[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4316:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var o=r(7462),a=(r(7294),r(3905));const n={slug:"workloads",title:"Team Workloads",sidebar_label:"Workloads"},l=void 0,i={unversionedId:"for-devs/console/workloads",id:"for-devs/console/workloads",title:"Team Workloads",description:"A Workload in Otomi is a self-service feature for:",source:"@site/docs/for-devs/console/workloads.md",sourceDirName:"for-devs/console",slug:"/for-devs/console/workloads",permalink:"/docs/for-devs/console/workloads",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/console/workloads.md",tags:[],version:"current",frontMatter:{slug:"workloads",title:"Team Workloads",sidebar_label:"Workloads"},sidebar:"mainSidebar",previous:{title:"Shortcuts",permalink:"/docs/for-devs/console/shortcuts"},next:{title:"Services",permalink:"/docs/for-devs/console/services"}},s={},c=[{value:"Create a Workload",id:"create-a-workload",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A Workload in Otomi is a self-service feature for:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Deploying Kubernetes workloads",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A regular Kubernetes deployment with HPA"),(0,a.kt)("li",{parentName:"ul"},"A Knative service"))),(0,a.kt)("li",{parentName:"ul"},"Automatically create the ArgoCD resources to deploy the workload in a GitOps way"),(0,a.kt)("li",{parentName:"ul"},"Manage the custom values of the workloads in Git")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The first phase of the workloads feature only supports deploying workloads using a provided Helm chart. In the second phase, you can also use Otomi chart templates to deploy different workload types.")),(0,a.kt)("h2",{id:"create-a-workload"},"Create a Workload"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Enter a name for the workload"),(0,a.kt)("li",{parentName:"ol"},"Enter the URL to the Git repo containing the Helm Chart or a Helm repository"),(0,a.kt)("li",{parentName:"ol"},"Optionally (only when using a Git repo) add the relative directory path within the Git repository. Absolute paths cause errors."),(0,a.kt)("li",{parentName:"ol"},"Optionally (only when using a Chart registry) add the name of the Helm chart"),(0,a.kt)("li",{parentName:"ol"},"Enter the revision. In case of using a Git repo, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of using a Chart repository, this is a semver tag for the Chart's version"),(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,a.kt)("p",null,"After submitting the new workload specs, the values editor will be shown. Here you can edit the chart values."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Click on ",(0,a.kt)("inlineCode",{parentName:"li"},"Edit")),(0,a.kt)("li",{parentName:"ol"},"Add your values (or leave empty to use chart default values)"),(0,a.kt)("li",{parentName:"ol"},"Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,a.kt)("p",null,"Now click on ",(0,a.kt)("inlineCode",{parentName:"p"},"Deploy Changes")),(0,a.kt)("p",null,"After a few minutes, Otomi will have created all the needed ArgoCD resources to deploy your workload. In the workloads list, click on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Application")," link of your workload to see the status of your workload."),(0,a.kt)("p",null,"The values of a workload can be changed at any time. Changes will automatically be deployed."))}p.isMDXComponent=!0}}]);