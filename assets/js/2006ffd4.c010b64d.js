"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[6217],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3458:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={slug:"console/policies",title:"Policies"},s=void 0,p={unversionedId:"ui-policies",id:"ui-policies",title:"Policies",description:"Policies",source:"@site/docs/ui-policies.md",sourceDirName:".",slug:"/console/policies",permalink:"/docs/console/policies",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/ui-policies.md",tags:[],version:"current",frontMatter:{slug:"console/policies",title:"Policies"},sidebar:"mainSidebar",previous:{title:"Clusters",permalink:"/docs/console/clusters"},next:{title:"Teams",permalink:"/docs/console/teams"}},c=[],u={toc:c};function d(e){var t=e.components,i=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Policies",src:n(8252).Z,width:"2644",height:"1802"})),(0,o.kt)("p",null,"This section allows to turn Open Policy Agent (OPA) policies on or off, and also set default parameters to be used by the policies."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Setting"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"banned-image-tags"),(0,o.kt)("td",{parentName:"tr",align:null},"Add any image tags for containers that are not allowed in your cluster.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"container-limits"),(0,o.kt)("td",{parentName:"tr",align:null},"Set global compute limits for your containers.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-allowed-repos"),(0,o.kt)("td",{parentName:"tr",align:null},"Add globally allowed repositories for version control.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-host-filesystem"),(0,o.kt)("td",{parentName:"tr",align:null},"Set policies for the host filesystem of all Kubernetes cluster nodes.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-allowed-users"),(0,o.kt)("td",{parentName:"tr",align:null},"Default user (UID) settings to force containers to run with. It is recommended to at least set 'runAsUser' to 'MustRunAsNonRoot' to disallow root.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-host-security"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether a pod is allowed to access the host PID namespace/host IPC, or if a pod defines host aliases.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-host-networking-ports"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether a pod can access ports on the host.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-privileged"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether privileged containers can escalate to root privileges on the node.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-capabilities"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether to allow containers with sufficient capabilities granted to obtain escalated access.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-forbidden-sysctls"),(0,o.kt)("td",{parentName:"tr",align:null},"Determine what system controls are allowed or not.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-apparmor"),(0,o.kt)("td",{parentName:"tr",align:null},"Prevents an application from accessing files it should not access.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-seccomp"),(0,o.kt)("td",{parentName:"tr",align:null},"Reduces the chance that a kernel vulnerability will be successfully exploited.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"psp-selinux"),(0,o.kt)("td",{parentName:"tr",align:null},"Security-enhanced Linux.")))),(0,o.kt)("p",null,"Please see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/open-policy-agent/gatekeeper-library"},"OPA Gatekeeper policy library")," as it is the source for the policies here. We made a selection of usable policies for Otomi and adapted them to be used by Conftest as well for static analysis of manifests generated by Otomi."))}d.isMDXComponent=!0},8252:function(e,t,n){t.Z=n.p+"assets/images/policies-7e56735693bd25d0e5709b5dc38ff7c8.png"}}]);