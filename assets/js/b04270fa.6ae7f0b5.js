"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5920],{3576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=n(5893),s=n(1151);const r={slug:"ingress-nginx",title:"NGINX Ingress",sidebar_label:"Ingress-nginx"},o=void 0,a={id:"apps/ingress-nginx",title:"NGINX Ingress",description:"Ingress NGINX is the default ingress controller in Otomi and part of the core setup (this means it is not possible use another controller within Otomi).",source:"@site/docs/apps/ingress-nginx.md",sourceDirName:"apps",slug:"/apps/ingress-nginx",permalink:"/docs/apps/ingress-nginx",draft:!1,unlisted:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/apps/ingress-nginx.md",tags:[],version:"current",frontMatter:{slug:"ingress-nginx",title:"NGINX Ingress",sidebar_label:"Ingress-nginx"},sidebar:"mainSidebar",previous:{title:"Harbor",permalink:"/docs/apps/harbor"},next:{title:"Istio",permalink:"/docs/apps/istio"}},c={},d=[{value:"Using the OWASP rule set",id:"using-the-owasp-rule-set",level:3},{value:"Automation",id:"automation",level:2},{value:"Integrations",id:"integrations",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Using ModSecurity",id:"using-modsecurity",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Ingress NGINX is the default ingress controller in Otomi and part of the core setup (this means it is not possible use another controller within Otomi)."}),"\n",(0,i.jsx)(t.h3,{id:"using-the-owasp-rule-set",children:"Using the OWASP rule set"}),"\n",(0,i.jsx)(t.p,{children:"The OWASP ModSecurity Core Rule Set (CRS) is a set of generic attack detection rules for use with ModSecurity or compatible web application firewalls. The CRS aims to protect web applications from a wide range of attacks, including the OWASP Top Ten, with a minimum of false alerts. The CRS provides protection against many common attack categories, including SQL Injection, Cross Site Scripting, Local File Inclusion, etc."}),"\n",(0,i.jsxs)(t.p,{children:["The OWASP rule set can only be enabled when ModSecurity is enabled. Read more about the OWASP rule set ",(0,i.jsx)(t.a,{href:"https://owasp.org/www-project-modsecurity-core-rule-set/",children:"here"})]}),"\n",(0,i.jsx)(t.h2,{id:"automation",children:"Automation"}),"\n",(0,i.jsxs)(t.p,{children:["Teams will be be automatically given a git repository in Gitea named ",(0,i.jsx)(t.code,{children:"team-$teamId-argocd"}),", and Argo CD is automatically configured to access the repository and sync. All that is left to do is for a team-admin (or team member with self-service rights) to fill their repository with intended state and commit."]}),"\n",(0,i.jsx)(t.h2,{id:"integrations",children:"Integrations"}),"\n",(0,i.jsxs)(t.p,{children:["Otomi integrated NGINX Ingress Controller into an advanced ",(0,i.jsx)(t.a,{href:"/docs/architecture/overview",children:"ingress architecture"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"instructions",children:"Instructions"}),"\n",(0,i.jsx)(t.h3,{id:"using-modsecurity",children:"Using ModSecurity"}),"\n",(0,i.jsxs)(t.p,{children:["By default, ModSecurity is not enabled in Nginx. To turn on ModSecurity, go to the values tab of the app. Under ",(0,i.jsx)(t.code,{children:"Mod security"})," click ",(0,i.jsx)(t.code,{children:"enabled"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"When enabled, ModSecurity by default is configured in blocking mode. This can have a negative impact on your application. First turn blocking off and adjust the applications accordingly. Teams can see all ModSecurity warnings using Grafana. A shortcut for this dashboard is allready preconfigured."}),"\n",(0,i.jsx)(t.p,{children:"The default modesecurity snipped added to the Nginx configuration contains the following defaults:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"modsecurity-snippet: |\n    SecAuditEngine RelevantOnly\n    SecAuditLogParts ABDEFHIJZ\n    SecAuditLogFormat JSON\n    SecAuditLogType Serial\n    SecAuditLog /dev/stdout\n    SecRequestBodyLimit 1073741824\n    SecRuleRemoveById 920350\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To change the modsecurity configuration, use ",(0,i.jsx)(t.code,{children:"Raw values"}),". ",(0,i.jsx)(t.a,{href:"https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual-(v3.x)#Configuration_Directives",children:"Here"})," is an overview of all the configuration directives."]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(7294);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);