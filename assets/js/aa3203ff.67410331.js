"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[2144],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?o.createElement(f,n(n({ref:t},c),{},{components:r})):o.createElement(f,n({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,n=new Array(i);n[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,n[1]=l;for(var u=2;u<i;u++)n[u]=r[u];return o.createElement.apply(null,n)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4394:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=r(7462),a=(r(7294),r(3905));const i={slug:"builds",title:"Team Builds",sidebar_label:"Builds"},n=void 0,l={unversionedId:"for-devs/console/builds",id:"for-devs/console/builds",title:"Team Builds",description:"A Build in Otomi is a self-service feature for:",source:"@site/docs/for-devs/console/builds.md",sourceDirName:"for-devs/console",slug:"/for-devs/console/builds",permalink:"/docs/for-devs/console/builds",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/console/builds.md",tags:[],version:"current",frontMatter:{slug:"builds",title:"Team Builds",sidebar_label:"Builds"},sidebar:"mainSidebar",previous:{title:"Shortcuts",permalink:"/docs/for-devs/console/shortcuts"},next:{title:"Workloads",permalink:"/docs/for-devs/console/workloads"}},s={},u=[{value:"Create a build",id:"create-a-build",level:2},{value:"Docker",id:"docker",level:3},{value:"Buildpacks",id:"buildpacks",level:3},{value:"(optional) Configure repository access:",id:"optional-configure-repository-access",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A Build in Otomi is a self-service feature for:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Building images based on application source code"),(0,a.kt)("li",{parentName:"ul"},"Pushing the image to the teams private registry in Harbor")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This is a BETA feature. Any feedback on this feature is very much appreciated.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Ask you platform administrator to activate Harbor and Tekton to be able to use this feature.")),(0,a.kt)("h2",{id:"create-a-build"},"Create a build"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Enter a name for the build")),(0,a.kt)("p",null,"The name of the build will be used for the registry name of the image (",(0,a.kt)("inlineCode",{parentName:"p"},"harbor.<domainSuffix>/team-name/build-name"),")"),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"(optional) Adjust the tag")),(0,a.kt)("p",null,"The tag will be used to tag the image  (",(0,a.kt)("inlineCode",{parentName:"p"},"harbor.<domainSuffix>/team-name/build-name:tag"),")"),(0,a.kt)("p",null,"Now choose the type of the build:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"Docker")," to build an image using the ",(0,a.kt)("inlineCode",{parentName:"li"},"./Dockerfile")," in your code repository"),(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"Buildpacks")," to build an image from application source using Buildpacks")),(0,a.kt)("h3",{id:"docker"},"Docker"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add the URL of the Git repository that contains the application source code"),(0,a.kt)("li",{parentName:"ol"},"(optional) Change the path of the ",(0,a.kt)("inlineCode",{parentName:"li"},"Dockerfile")),(0,a.kt)("li",{parentName:"ol"},"(optional) Change the revsion. This can be a commit, a tag, or a branch"),(0,a.kt)("li",{parentName:"ol"},"(optional) Configure ",(0,a.kt)("a",{parentName:"li",href:"#optional-configure-repository-access"},"repository access"))),(0,a.kt)("h3",{id:"buildpacks"},"Buildpacks"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add the URL of the Git repository that contains the application source code"),(0,a.kt)("li",{parentName:"ol"},"(optional) Add the path. This is a subpath within the repo where the source to build is located"),(0,a.kt)("li",{parentName:"ol"},"(optional) Change the revsion. This can be a commit, a tag, or a branch"),(0,a.kt)("li",{parentName:"ol"},"(optional) Configure ",(0,a.kt)("a",{parentName:"li",href:"#optional-configure-repository-access"},"repository access"))),(0,a.kt)("h3",{id:"optional-configure-repository-access"},"(optional) Configure repository access:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If Gitea (provided by Otomi) is used to host the code repository, select ",(0,a.kt)("inlineCode",{parentName:"li"},"Otomi Gitea repo")),(0,a.kt)("li",{parentName:"ul"},"If an external private Git repo is used that requires authentication, select ",(0,a.kt)("inlineCode",{parentName:"li"},"Private repo")," and fill in the username ans password. If your github account has 2 factor auth configured, create a personal access token using ",(0,a.kt)("a",{parentName:"li",href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"},"this procedure"),".")),(0,a.kt)("p",null,"After a few minutes, Otomi will run a pipeline to create the build and push the build to the team's private Harbor registry. Check Harbor to see if the image is created and pushed."))}p.isMDXComponent=!0}}]);