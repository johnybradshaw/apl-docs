(self.webpackChunkotomi_docs=self.webpackChunkotomi_docs||[]).push([[6795],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),p=m(n),d=o,h=p["".concat(s,".").concat(d)]||p[d]||c[d]||l;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=p;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,i[1]=r;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5381:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var a=n(2122),o=n(9756),l=(n(7294),n(3905)),i=["components"],r={slug:"ce/teams",title:"Configuring teams",sidebar_label:"Teams"},s={unversionedId:"ce-configure-teams",id:"ce-configure-teams",isDocsHomePage:!1,title:"Configuring teams",description:"When you are running Otomi in CE mode or doing local development, you will operate on values directly and have to commit them manually:",source:"@site/docs/ce-configure-teams.md",sourceDirName:".",slug:"/ce/teams",permalink:"/docs/ce/teams",editUrl:"https://github.com/redkubes/redkubes/tree/master/docs/ce-configure-teams.md",version:"current",sidebar_label:"Teams",frontMatter:{slug:"ce/teams",title:"Configuring teams",sidebar_label:"Teams"},sidebar:"mainSidebar",previous:{title:"CE Overview",permalink:"/docs/ce/"},next:{title:"Working with Drone",permalink:"/docs/apps/drone"}},m=[{value:"Install Otomi CLI (optional)",id:"install-otomi-cli-optional",children:[]},{value:"Pull the values",id:"pull-the-values",children:[]},{value:"Bootstap the values (optional)",id:"bootstap-the-values-optional",children:[]},{value:"Change the values",id:"change-the-values",children:[{value:"1. Modify the teams.yaml",id:"1-modify-the-teamsyaml",children:[]},{value:"2. Create the team files",id:"2-create-the-team-files",children:[]}]},{value:"validate changes (optional)",id:"validate-changes-optional",children:[]},{value:"Commit changes",id:"commit-changes",children:[]}],u={toc:m};function c(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"When you are running Otomi in CE mode or doing local development, you will operate on values directly and have to commit them manually:"),(0,l.kt)("h2",{id:"install-otomi-cli-optional"},"Install Otomi CLI (optional)"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/docs/cli"},"here")," to install Otomi CLI."),(0,l.kt)("h2",{id:"pull-the-values"},"Pull the values"),(0,l.kt)("p",null,"Clone the ",(0,l.kt)("inlineCode",{parentName:"p"},"otomi/values")," repository from ",(0,l.kt)("inlineCode",{parentName:"p"},"gitea.<your.domain>/otomi/values")," (if not already done)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://gitea.<your.domain>/otomi/values.git\n")),(0,l.kt)("h2",{id:"bootstap-the-values-optional"},"Bootstap the values (optional)"),(0,l.kt)("p",null,"If you would like to use the Visual Studio integration when working with Otomi values, then first bootstap the values:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"otomi bootstap\n")),(0,l.kt)("h2",{id:"change-the-values"},"Change the values"),(0,l.kt)("p",null,"To create a team, follow these steps:"),(0,l.kt)("h3",{id:"1-modify-the-teamsyaml"},"1. Modify the teams.yaml"),(0,l.kt)("p",null,"Add the team to the ",(0,l.kt)("inlineCode",{parentName:"p"},"values/env/teams.yaml"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"teamConfig:\n  teams:\n    <team-name>:\n      id: <team-name>\n")),(0,l.kt)("h3",{id:"2-create-the-team-files"},"2. Create the team files"),(0,l.kt)("p",null,"Add the following 3 files:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"external-secrets.<team-name>.yaml")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"jobs.<team-name>.yaml")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"services.<team-name>.yaml"))),(0,l.kt)("p",null,"Each file should contain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"{}\n")),(0,l.kt)("h2",{id:"validate-changes-optional"},"validate changes (optional)"),(0,l.kt)("p",null,"When using Otomi CLI, you can validate the changes in the values based on the Otomi values schema:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"otomi validate-values\n")),(0,l.kt)("h2",{id:"commit-changes"},"Commit changes"),(0,l.kt)("p",null,"Commit and push the changes using Otomi CLI:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"otomi commit\n")),(0,l.kt)("p",null,"or commit and push the changes using git:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'git commit -m "your commit comment" --no-verify\ngit push\n')),(0,l.kt)("p",null,'A first commit will automatically generate a Drone pipeline configuration, and then commit all files with a standardized message "Manual commit".'))}c.isMDXComponent=!0}}]);