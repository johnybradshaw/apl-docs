"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[7763],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return n?i.createElement(k,l(l({ref:t},m),{},{components:n})):i.createElement(k,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7694:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={slug:"tutorial-10",title:"Creating a micro service architecture",sidebar_label:"Micro service architecture"},l=void 0,o={unversionedId:"tutorials/tutorial-10",id:"tutorials/tutorial-10",title:"Creating a micro service architecture",description:"In this tutorial we are going to deploy multiple services from different teams and expose them using a shared domain, but each on their own path. We will use on-the-fly Knative services for speed and simplicity.",source:"@site/docs/tutorials/tutorial-10.md",sourceDirName:"tutorials",slug:"/tutorials/tutorial-10",permalink:"/docs/tutorials/tutorial-10",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/tutorials/tutorial-10.md",tags:[],version:"current",frontMatter:{slug:"tutorial-10",title:"Creating a micro service architecture",sidebar_label:"Micro service architecture"},sidebar:"mainSidebar",previous:{title:"Configuring network policies",permalink:"/docs/tutorials/tutorial-9"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Conclusion",id:"conclusion",level:2}],m={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this tutorial we are going to deploy multiple services from different teams and expose them using a shared domain, but each on their own path. We will use on-the-fly Knative services for speed and simplicity."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You are familiar with Knative"),(0,a.kt)("li",{parentName:"ol"},"Knative is enabled in Otomi. (Check the ",(0,a.kt)("inlineCode",{parentName:"li"},"Apps")," section under ",(0,a.kt)("inlineCode",{parentName:"li"},"Platform"),".)"),(0,a.kt)("li",{parentName:"ol"},"Two teams are created. We will refer to them as ",(0,a.kt)("inlineCode",{parentName:"li"},"alpha")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"beta"),". (It is not necessary to ",(0,a.kt)("inlineCode",{parentName:"li"},"Deploy")," first.)")),(0,a.kt)("h2",{id:"instructions"},"Instructions"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Select team ",(0,a.kt)("inlineCode",{parentName:"p"},"alpha")," in the top bar, select ",(0,a.kt)("inlineCode",{parentName:"p"},"Services")," from the ",(0,a.kt)("inlineCode",{parentName:"p"},"Team alpha")," menu section and click on ",(0,a.kt)("inlineCode",{parentName:"p"},"Create Service"),", and choose ",(0,a.kt)("inlineCode",{parentName:"p"},"New knative service"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide the following values and ",(0,a.kt)("inlineCode",{parentName:"p"},"submit"),":"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name: ",(0,a.kt)("inlineCode",{parentName:"li"},"sir")),(0,a.kt)("li",{parentName:"ul"},"Run As User: ",(0,a.kt)("inlineCode",{parentName:"li"},"1001")),(0,a.kt)("li",{parentName:"ul"},"Repository: ",(0,a.kt)("inlineCode",{parentName:"li"},"otomi/nodejs-helloworld")),(0,a.kt)("li",{parentName:"ul"},"Tag: ",(0,a.kt)("inlineCode",{parentName:"li"},"v1.2.12")),(0,a.kt)("li",{parentName:"ul"},"Limits: ",(0,a.kt)("inlineCode",{parentName:"li"},"CPU=100m"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Memory=128Mi")),(0,a.kt)("li",{parentName:"ul"},"Requests: ",(0,a.kt)("inlineCode",{parentName:"li"},"CPU=50m"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Memory=64Mi")),(0,a.kt)("li",{parentName:"ul"},"env: ",(0,a.kt)("inlineCode",{parentName:"li"},"TARGET=world, I just woke up!"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"SERVANTS=servant-1,servant-2")),(0,a.kt)("li",{parentName:"ul"},"Check ",(0,a.kt)("inlineCode",{parentName:"li"},"Scale to zero")),(0,a.kt)("li",{parentName:"ul"},"Exposure: ",(0,a.kt)("inlineCode",{parentName:"li"},"Ingress")),(0,a.kt)("li",{parentName:"ul"},"Uncheck ",(0,a.kt)("inlineCode",{parentName:"li"},"Use team domain")),(0,a.kt)("li",{parentName:"ul"},"host: ",(0,a.kt)("inlineCode",{parentName:"li"},"hello-multi")," (DNS zone can be left as-is)")),(0,a.kt)("p",null,"Click ",(0,a.kt)("inlineCode",{parentName:"p"},"Deploy")," to start the service and domain registration, as that might take time. Plus we want the service to go to sleep as we intend to wake it up later (it serves a purpose, hope you spot it later on ;)."),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Under the same team create the last ",(0,a.kt)("inlineCode",{parentName:"li"},"New knative service")," service with the same values but the following diff and ",(0,a.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name: ",(0,a.kt)("inlineCode",{parentName:"li"},"informant")),(0,a.kt)("li",{parentName:"ul"},"Exposure: ",(0,a.kt)("inlineCode",{parentName:"li"},"Cluster")),(0,a.kt)("li",{parentName:"ul"},"Leave ",(0,a.kt)("inlineCode",{parentName:"li"},"Scale to zero")," unchecked")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Under the same team create another ",(0,a.kt)("inlineCode",{parentName:"li"},"New knative service")," service  with the same values but with the following diff and ",(0,a.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name: ",(0,a.kt)("inlineCode",{parentName:"li"},"servant-1")),(0,a.kt)("li",{parentName:"ul"},"paths: ",(0,a.kt)("inlineCode",{parentName:"li"},"/servant-1")),(0,a.kt)("li",{parentName:"ul"},"env: ",(0,a.kt)("inlineCode",{parentName:"li"},"TARGET=sir"))),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Select team ",(0,a.kt)("inlineCode",{parentName:"li"},"beta")," and create a ",(0,a.kt)("inlineCode",{parentName:"li"},"New knative service")," service with the same values but the following diff and ",(0,a.kt)("inlineCode",{parentName:"li"},"submit"),":")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name: ",(0,a.kt)("inlineCode",{parentName:"li"},"servant-2")),(0,a.kt)("li",{parentName:"ul"},"paths: ",(0,a.kt)("inlineCode",{parentName:"li"},"/servant-2")),(0,a.kt)("li",{parentName:"ul"},"env: ",(0,a.kt)("inlineCode",{parentName:"li"},"TARGET=sir"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"INFORMANT=http://informant.team-alpha")," ")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"Now click ",(0,a.kt)("inlineCode",{parentName:"li"},"Deploy Changes")," again and watch the deployment finish in Drone.")),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"In effect what we have done is create the following workloads for team ",(0,a.kt)("inlineCode",{parentName:"p"},"alpha"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"master.team-alpha")," exposed via ",(0,a.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"servant-1.team-alpha")," exposed via ",(0,a.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain/servant-1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"informant.team-alpha")," not exposed publicly, but only able to receive requests from ",(0,a.kt)("inlineCode",{parentName:"li"},"servant-2.team-beta"),".")),(0,a.kt)("p",null,"And for team ",(0,a.kt)("inlineCode",{parentName:"p"},"beta"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"servant-2.team-beta")," exposed via ",(0,a.kt)("inlineCode",{parentName:"li"},"https://hello-multi.$domain/servant-2"))),(0,a.kt)("p",null,"Bonus: Add network policies to make sure no unforeseen traffic is routed :)"))}u.isMDXComponent=!0}}]);