"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[5841],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var o=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=o.createContext({}),p=function(e){var t=o.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,h=c["".concat(u,".").concat(m)]||c[m]||s[m]||n;return a?o.createElement(h,i(i({ref:t},d),{},{components:a})):o.createElement(h,i({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=c;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<n;p++)i[p]=a[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1543:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var o=a(7462),r=(a(7294),a(3905));const n={slug:"tutorials/build-tag-push",title:"Build, tag and push an image to Harbor",sidebar_label:"Push an image to harbor"},i=void 0,l={unversionedId:"old/tutorial-3-push-harbor",id:"old/tutorial-3-push-harbor",title:"Build, tag and push an image to Harbor",description:"When Otomi is installed without using Let's Encrypt production certificates, make sure you download the CA.crt, added it to your Keychain and restarted Docker.",source:"@site/docs/old/tutorial-3-push-harbor.md",sourceDirName:"old",slug:"/old/tutorials/build-tag-push",permalink:"/docs/old/tutorials/build-tag-push",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/old/tutorial-3-push-harbor.md",tags:[],version:"current",frontMatter:{slug:"tutorials/build-tag-push",title:"Build, tag and push an image to Harbor",sidebar_label:"Push an image to harbor"}},u={},p=[{value:"Activate Harbor",id:"activate-harbor",level:3},{value:"Create a robot account in Harbor",id:"create-a-robot-account-in-harbor",level:3},{value:"Download the demo application used in this tutorial",id:"download-the-demo-application-used-in-this-tutorial",level:3},{value:"Login to Harbor",id:"login-to-harbor",level:3},{value:"Build, tag and push the image",id:"build-tag-and-push-the-image",level:3}],d={toc:p};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"When Otomi is installed without using Let's Encrypt production certificates, make sure you download the CA.crt, added it to your Keychain and restarted Docker.")),(0,r.kt)("p",null,"In this tutorial, you are going to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Activate Harbor"),(0,r.kt)("li",{parentName:"ol"},"Build an image and push it to Harbor in Otomi"),(0,r.kt)("li",{parentName:"ol"},"Create a Kubernetes Deployment and Service"),(0,r.kt)("li",{parentName:"ol"},"Publicly expose the Hello World app using Otomi")),(0,r.kt)("p",null,"When you created a Team in Otomi, Otomi will automatically create a project for the team in Harbor. In this tutorial we'll assume you have created a team called ",(0,r.kt)("inlineCode",{parentName:"p"},"demo"),"."),(0,r.kt)("h3",{id:"activate-harbor"},"Activate Harbor"),(0,r.kt)("p",null,"Go to ",(0,r.kt)("inlineCode",{parentName:"p"},"Apps")," under the ",(0,r.kt)("inlineCode",{parentName:"p"},"Platform")," section in the side menu and Drag and Drop ",(0,r.kt)("inlineCode",{parentName:"p"},"Harbor")," from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Disabled apps")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Enabled apps"),"."),(0,r.kt)("h3",{id:"create-a-robot-account-in-harbor"},"Create a robot account in Harbor"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Robot accounts for teams can only be created by users with the ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi-admin")," role")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to ",(0,r.kt)("inlineCode",{parentName:"li"},"https://harbor.<your-ip>.nip.io")),(0,r.kt)("li",{parentName:"ul"},"Click 'Login with OIDC Provider'"),(0,r.kt)("li",{parentName:"ul"},"Fill in your user name and click save"),(0,r.kt)("li",{parentName:"ul"},"Under ",(0,r.kt)("inlineCode",{parentName:"li"},"Administration"),", click ",(0,r.kt)("inlineCode",{parentName:"li"},"Robot Accounts")),(0,r.kt)("li",{parentName:"ul"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"+ New Robot account")),(0,r.kt)("li",{parentName:"ul"},"Provide a name for the new robot account: ",(0,r.kt)("inlineCode",{parentName:"li"},"team-demo-push")),(0,r.kt)("li",{parentName:"ul"},"Set an Expiration time"),(0,r.kt)("li",{parentName:"ul"},"Select ",(0,r.kt)("inlineCode",{parentName:"li"},"team-demo")," and optionally change the permissions"),(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Add")),(0,r.kt)("li",{parentName:"ul"},"Copy the generated token")),(0,r.kt)("h3",{id:"download-the-demo-application-used-in-this-tutorial"},"Download the demo application used in this tutorial"),(0,r.kt)("p",null,"Clone the repo used for this tutorial:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/redkubes/nodejs-helloworld.git\n")),(0,r.kt)("h3",{id:"login-to-harbor"},"Login to Harbor"),(0,r.kt)("p",null,"Login with username ",(0,r.kt)("inlineCode",{parentName:"p"},"otomi-team-demo-push")," & password: ",(0,r.kt)("inlineCode",{parentName:"p"},"token")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker login -u 'otomi-team-demo-push' -p '$token' harbor.<your-ip>.nip.io\n")),(0,r.kt)("h3",{id:"build-tag-and-push-the-image"},"Build, tag and push the image"),(0,r.kt)("p",null,"Build and tag the image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t harbor.<your-ip>.nip.io/team-demo/hello-world:latest .\n")),(0,r.kt)("p",null,"Push the image to Harbor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker push harbor.<your-ip>.nip.iom/team-demo/hello-world:latest\n")),(0,r.kt)("p",null,"Now go to the team-demo project and verify that the hello-world repository has been created."))}s.isMDXComponent=!0}}]);