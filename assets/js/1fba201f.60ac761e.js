"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8587],{2248:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var n=l(5893),o=l(1151);const t={slug:"lab-19",title:"Configuring network policies",sidebar_label:"Configure network policies"},i=void 0,r={id:"get-started/labs/lab-19",title:"Configuring network policies",description:"In some cases you want to explicitly allow access to your application. This can be done by creating network policies. Otomi supports 2 types of network policies:",source:"@site/docs/get-started/labs/lab-19.md",sourceDirName:"get-started/labs",slug:"/get-started/labs/lab-19",permalink:"/docs/get-started/labs/lab-19",draft:!1,unlisted:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/labs/lab-19.md",tags:[],version:"current",frontMatter:{slug:"lab-19",title:"Configuring network policies",sidebar_label:"Configure network policies"},sidebar:"mainSidebar",previous:{title:"Monitor services",permalink:"/docs/get-started/labs/lab-23"},next:{title:"Use OpenTelemery",permalink:"/docs/get-started/labs/lab-27"}},d={},c=[{value:"Understanding Internal Ingress Network Policies",id:"understanding-internal-ingress-network-policies",level:2},{value:"Understanding Egress Network Policies",id:"understanding-egress-network-policies",level:2},{value:"Setting Up Network Policies for the Example Voting App: An Ingress Example",id:"setting-up-network-policies-for-the-example-voting-app-an-ingress-example",level:2},{value:"Build Images for the Application",id:"build-images-for-the-application",level:3},{value:"Create a Redis Cluster and a PostgreSQL Database",id:"create-a-redis-cluster-and-a-postgresql-database",level:3},{value:"Deploy the Vote App",id:"deploy-the-vote-app",level:3},{value:"Deploy the Worker App",id:"deploy-the-worker-app",level:3},{value:"Deploy the Result App",id:"deploy-the-result-app",level:3},{value:"Register the Services for Exposure",id:"register-the-services-for-exposure",level:3},{value:"Postgres Database",id:"postgres-database",level:4},{value:"Redis",id:"redis",level:4},{value:"Vote",id:"vote",level:4},{value:"Result",id:"result",level:4},{value:"Register the Network Policies for the Example Voting App",id:"register-the-network-policies-for-the-example-voting-app",level:3},{value:"Postgres Database",id:"postgres-database-1",level:4},{value:"Redis",id:"redis-1",level:4},{value:"Test the Voting App",id:"test-the-voting-app",level:3},{value:"Setting Up Network Policies for Otomi.io: An Egress Example",id:"setting-up-network-policies-for-otomiio-an-egress-example",level:2},{value:"Register the Network Policy for Otomi.io",id:"register-the-network-policy-for-otomiio",level:3},{value:"Deploy Netshoot Pod",id:"deploy-netshoot-pod",level:3},{value:"Test the Egress Network Policy",id:"test-the-egress-network-policy",level:3}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"In some cases you want to explicitly allow access to your application. This can be done by creating network policies. Otomi supports 2 types of network policies:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Policies for ingress traffic inside the cluster"}),"\n",(0,n.jsx)(s.li,{children:"Policies for egress traffic to go outside of the cluster (to access external FQDNs)"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"understanding-internal-ingress-network-policies",children:"Understanding Internal Ingress Network Policies"}),"\n",(0,n.jsx)(s.p,{children:"The internal ingress network policies allow you to:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Deny all traffic to Pods (default mode)"}),"\n",(0,n.jsx)(s.li,{children:"Allow selected Workload Pods running on the cluster to access your Workload's Pods"}),"\n",(0,n.jsx)(s.li,{children:"Allow all traffic to the Pods of a Workload"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"Deny all"})," and ",(0,n.jsx)(s.code,{children:"Allow all"})," we don't need to explain right?"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["The Ingress Network Policies in Otomi rely on Pod labels. We require that a single label covers Pods for a given workload. We recommend to use the ",(0,n.jsx)(s.code,{children:"otomi.io/app: <workload-name>"})," label."]})}),"\n",(0,n.jsx)(s.p,{children:"To allow other Workloads in the cluster to access your Workload's Pods, follow these steps:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Navigate to the ",(0,n.jsx)(s.code,{children:"Network Policies"})," page in the Otomi Console and click ",(0,n.jsx)(s.code,{children:"Create Netpol"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Name the network policy and select the ",(0,n.jsx)(s.code,{children:"ingress"})," rule type."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the selector label name and value for the Workload Pods to be accessed. E.g.: use the ",(0,n.jsx)(s.code,{children:"otomi.io/app"})," label."]}),"\n",(0,n.jsxs)(s.li,{children:["Select either ",(0,n.jsx)(s.code,{children:"AllowAll"})," or ",(0,n.jsx)(s.code,{children:"AllowOnly"})," mode."]}),"\n",(0,n.jsxs)(s.li,{children:["If you select ",(0,n.jsx)(s.code,{children:"AllowOnly"}),", specify the namespace (e.g., ",(0,n.jsx)(s.code,{children:"team-labs"}),"), and the selector label name and value for the Workload Pods to be accessed."]}),"\n",(0,n.jsx)(s.li,{children:"Add more rules if needed."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"understanding-egress-network-policies",children:"Understanding Egress Network Policies"}),"\n",(0,n.jsx)(s.p,{children:"The egress network policies allow you to:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Deny all traffic from the Pods of a Workload (default)"}),"\n",(0,n.jsx)(s.li,{children:"Allow all Pods within a namespace to access external FQDNs or IPs through an egress rule."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"To allow your Workload's Pods to access external FQDNs or IPs, follow these steps:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Navigate to the ",(0,n.jsx)(s.code,{children:"Network Policies"})," page in the Otomi Console and click ",(0,n.jsx)(s.code,{children:"Create Netpol"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Name the network policy and select the ",(0,n.jsx)(s.code,{children:"egress"})," rule type."]}),"\n",(0,n.jsx)(s.li,{children:"Add the FQDN or IP to be accessed."}),"\n",(0,n.jsx)(s.li,{children:"Add port number(s) and protocol if needed."}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsx)(s.p,{children:"The egress rules are namespace wide. You cannot bind egress policy to a given workload only."})}),"\n",(0,n.jsx)(s.h2,{id:"setting-up-network-policies-for-the-example-voting-app-an-ingress-example",children:"Setting Up Network Policies for the Example Voting App: An Ingress Example"}),"\n",(0,n.jsx)(s.h3,{id:"build-images-for-the-application",children:"Build Images for the Application"}),"\n",(0,n.jsxs)(s.p,{children:["Build the ",(0,n.jsx)(s.code,{children:"Vote"}),", ",(0,n.jsx)(s.code,{children:"Worker"})," and ",(0,n.jsx)(s.code,{children:"Result"})," images from this ",(0,n.jsx)(s.a,{href:"https://github.com/redkubes/example-voting-app",children:"repo"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Use the Build feature in Otomi to build the images with ",(0,n.jsx)(s.code,{children:"mode: Docker"}),". Set the ",(0,n.jsx)(s.code,{children:"path"})," to ",(0,n.jsx)(s.code,{children:"./vote/Dockerfile"})," for the Vote image (and ",(0,n.jsx)(s.code,{children:"./worker/Dockerfile"})," for the Worker and ",(0,n.jsx)(s.code,{children:"./result/Dockerfile"})," for Result)."]}),"\n",(0,n.jsx)(s.h3,{id:"create-a-redis-cluster-and-a-postgresql-database",children:"Create a Redis Cluster and a PostgreSQL Database"}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.code,{children:"postgresql"})," and the ",(0,n.jsx)(s.code,{children:"redis"})," charts from the Catalog to create a Redis master-replica cluster and a PostgreSQL database. For this lab, Redis authentication needs to be turned off by setting ",(0,n.jsx)(s.code,{children:"auth.enabled=false"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"deploy-the-vote-app",children:"Deploy the Vote App"}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.code,{children:"k8s-deployment"})," chart to deploy the vote app. Use the following values:"]}),"\n",(0,n.jsxs)(s.p,{children:["Name: ",(0,n.jsx)(s.code,{children:"vote"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: REDIS_HOST\n    value: <redis-cluster-name>-master\n"})}),"\n",(0,n.jsx)(s.h3,{id:"deploy-the-worker-app",children:"Deploy the Worker App"}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.code,{children:"k8s-deployment"})," chart to deploy the worker app. Use the following values:"]}),"\n",(0,n.jsxs)(s.p,{children:["Name: ",(0,n.jsx)(s.code,{children:"worker"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: DATABASE_USER\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: username\n  - name: DATABASE_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: password\n  - name: REDIS_HOST\n    value: <redis-cluster-name>-master\n  - name: DATABASE_HOST\n    value: <psql-cluster-name>-rw\n"})}),"\n",(0,n.jsx)(s.h3,{id:"deploy-the-result-app",children:"Deploy the Result App"}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.code,{children:"k8s-deployment"})," chart to deploy the result app. Use the following values:"]}),"\n",(0,n.jsxs)(s.p,{children:["Name: ",(0,n.jsx)(s.code,{children:"result"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"containerPorts:\n  - name: http\n    containerPort: 80\n    protocol: TCP\nenv:\n  - name: DATABASE_USER\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: username\n  - name: DATABASE_PASSWORD\n    valueFrom:\n      secretKeyRef:\n        name: <psql-cluster-name>-superuser\n        key: password\n  - name: DATABASE_HOST\n    value: <psql-cluster-name>-rw\n"})}),"\n",(0,n.jsx)(s.h3,{id:"register-the-services-for-exposure",children:"Register the Services for Exposure"}),"\n",(0,n.jsx)(s.h4,{id:"postgres-database",children:"Postgres Database"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Register the ",(0,n.jsx)(s.code,{children:"<workload-name>-rw"})," Postgresql service."]}),"\n",(0,n.jsxs)(s.li,{children:["Set exposure to ",(0,n.jsx)(s.code,{children:"Private"})," (default)."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"redis",children:"Redis"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Register the ",(0,n.jsx)(s.code,{children:"<workload-name>-master"})," Redis service."]}),"\n",(0,n.jsxs)(s.li,{children:["Set exposure to ",(0,n.jsx)(s.code,{children:"Private"})," (default)."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"vote",children:"Vote"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Register the ",(0,n.jsx)(s.code,{children:"vote"})," service."]}),"\n",(0,n.jsxs)(s.li,{children:["Set exposure to ",(0,n.jsx)(s.code,{children:"External"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"result",children:"Result"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Register the ",(0,n.jsx)(s.code,{children:"<result>"})," service."]}),"\n",(0,n.jsxs)(s.li,{children:["Set exposure to ",(0,n.jsx)(s.code,{children:"External"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"register-the-network-policies-for-the-example-voting-app",children:"Register the Network Policies for the Example Voting App"}),"\n",(0,n.jsx)(s.h4,{id:"postgres-database-1",children:"Postgres Database"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Create a new ",(0,n.jsx)(s.code,{children:"Netpol"})," and select the ",(0,n.jsx)(s.code,{children:"ingress"})," rule type."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the selector label value ",(0,n.jsx)(s.code,{children:"<postgres-workload-name>"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Select ",(0,n.jsx)(s.code,{children:"AllowOnly"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the namespace ",(0,n.jsx)(s.code,{children:"<team-name>"}),", the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"})," and the selector label value ",(0,n.jsx)(s.code,{children:"<worker>"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the namespace ",(0,n.jsx)(s.code,{children:"<team-name>"}),", the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"})," and the selector label value ",(0,n.jsx)(s.code,{children:"<result>"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"redis-1",children:"Redis"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Create a new ",(0,n.jsx)(s.code,{children:"Netpol"})," and select the ",(0,n.jsx)(s.code,{children:"ingress"})," rule type."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the selector label value ",(0,n.jsx)(s.code,{children:"<redis-workload-name>"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Select ",(0,n.jsx)(s.code,{children:"AllowOnly"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the namespace ",(0,n.jsx)(s.code,{children:"<team-name>"}),", the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"})," and the selector label value ",(0,n.jsx)(s.code,{children:"<worker>"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the namespace ",(0,n.jsx)(s.code,{children:"<team-name>"}),", the selector label name ",(0,n.jsx)(s.code,{children:"otomi.io/app"})," and the selector label value ",(0,n.jsx)(s.code,{children:"<vote>"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"test-the-voting-app",children:"Test the Voting App"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Go to the external URL of the ",(0,n.jsx)(s.code,{children:"vote"})," application."]}),"\n",(0,n.jsxs)(s.li,{children:["Click on ",(0,n.jsx)(s.code,{children:"Cats"})," or ",(0,n.jsx)(s.code,{children:"Dogs"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Now go to the external URL of the ",(0,n.jsx)(s.code,{children:"result"})," application."]}),"\n",(0,n.jsx)(s.li,{children:"You should see the result of your vote."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"setting-up-network-policies-for-otomiio-an-egress-example",children:"Setting Up Network Policies for Otomi.io: An Egress Example"}),"\n",(0,n.jsx)(s.h3,{id:"register-the-network-policy-for-otomiio",children:"Register the Network Policy for Otomi.io"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Navigate to the ",(0,n.jsx)(s.code,{children:"Network Policies"})," page in the Otomi Console and click ",(0,n.jsx)(s.code,{children:"Create Netpol"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Name the network policy ",(0,n.jsx)(s.code,{children:"otomi"})," and select the ",(0,n.jsx)(s.code,{children:"egress"})," rule type."]}),"\n",(0,n.jsxs)(s.li,{children:["Add the FQDN ",(0,n.jsx)(s.code,{children:"otomi.io"})," to be accessed."]}),"\n",(0,n.jsxs)(s.li,{children:["Add port number ",(0,n.jsx)(s.code,{children:"443"})," and protocol ",(0,n.jsx)(s.code,{children:"HTTPS"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"deploy-netshoot-pod",children:"Deploy Netshoot Pod"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Deploy a Netshoot pod in your namespace within your Kubernetes cluster."}),"\n",(0,n.jsxs)(s.li,{children:["You can do this using kubectl command:","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"kubectl run -i --tty --rm netshoot --image nicolaka/netshoot -n team-labs\n"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://github.com/nicolaka/netshoot",children:"Netshoot"})," pod is a network troubleshooting tool that includes a lot of network tools like ",(0,n.jsx)(s.code,{children:"curl"}),", ",(0,n.jsx)(s.code,{children:"dig"}),", ",(0,n.jsx)(s.code,{children:"nslookup"}),", ",(0,n.jsx)(s.code,{children:"ping"}),", ",(0,n.jsx)(s.code,{children:"traceroute"}),", etc."]})}),"\n",(0,n.jsx)(s.h3,{id:"test-the-egress-network-policy",children:"Test the Egress Network Policy"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Run the following command in the Netshoot pod:","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"curl https://otomi.io\n"})}),"\n"]}),"\n",(0,n.jsx)(s.li,{children:"You should see the HTML of the Otomi.io website."}),"\n",(0,n.jsxs)(s.li,{children:["Run the following command to see the ",(0,n.jsx)(s.code,{children:"<h1>Build, Deploy and Run applications at scale</h1>"})," message:","\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-shell",children:"curl https://otomi.io | grep -o '<h1>.*</h1>'\n"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["Type ",(0,n.jsx)(s.code,{children:"exit"})," to exit the Netshoot pod."]}),"\n",(0,n.jsx)(s.li,{children:"When you exit the Netshoot pod, it will be removed from the cluster."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},1151:(e,s,l)=>{l.d(s,{Z:()=>r,a:()=>i});var n=l(7294);const o={},t=n.createContext(o);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);