"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[27],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(a),m=o,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||n;return a?r.createElement(k,l(l({ref:t},d),{},{components:a})):r.createElement(k,l({ref:t},d))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,l=new Array(n);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<n;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4462:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var r=a(7462),o=(a(7294),a(3905));const n={slug:"lab-13",title:"Deploy workloads using Otomi",sidebar_label:"Lab 13"},l=void 0,i={unversionedId:"for-devs/get-started/lab-13",id:"for-devs/get-started/lab-13",title:"Deploy workloads using Otomi",description:"In the previous 2 parts we have explained how to deploy a workload with a BYO manifest using Kubectl and how to deploy a workload with a BYO manifest using ArgoCD in Otomi. In this part we'll deploy a regular workload (a Kubernetes Deployment) using the Otomi Workloads feature.",source:"@site/docs/for-devs/get-started/lab-13.md",sourceDirName:"for-devs/get-started",slug:"/for-devs/get-started/lab-13",permalink:"/docs/for-devs/get-started/lab-13",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/get-started/lab-13.md",tags:[],version:"current",frontMatter:{slug:"lab-13",title:"Deploy workloads using Otomi",sidebar_label:"Lab 13"},sidebar:"mainSidebar",previous:{title:"Lab 12",permalink:"/docs/for-devs/get-started/lab-12"},next:{title:"Lab 14",permalink:"/docs/for-devs/get-started/lab-14"}},s={},p=[{value:"Creating a Regular Workload",id:"creating-a-regular-workload",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the previous 2 parts we have explained how to deploy a workload with a BYO manifest using Kubectl and how to deploy a workload with a BYO manifest using ArgoCD in Otomi. In this part we'll deploy a regular workload (a Kubernetes Deployment) using the Otomi Workloads feature."),(0,o.kt)("p",null,"When creating workloads in Otomi, the specifications (URL and path) and the values of a Helm chart is stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"otomi-values")," and then used to automatically create the ArgoCD resources to deploy the workload."),(0,o.kt)("p",null,"As a developer, you'll have the following options to deploy serverless workloads:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"BYO Knative service manifest and deploy it using kubectl or ArgoCD"),(0,o.kt)("li",{parentName:"ul"},"Create workloads with the deployment Helm chart  in ",(0,o.kt)("inlineCode",{parentName:"li"},"otomi-charts")),(0,o.kt)("li",{parentName:"ul"},"Create workloads with the Knative Helm chart in ",(0,o.kt)("inlineCode",{parentName:"li"},"otomi-charts"))),(0,o.kt)("h2",{id:"creating-a-regular-workload"},"Creating a Regular Workload"),(0,o.kt)("p",null,"You can create a workload to deploy your own Helm chart, or you can use one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"otomi-charts")," Helm charts. In this case we'll use the deployment chart in the ",(0,o.kt)("inlineCode",{parentName:"p"},"otomi-charts")," repository."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"Workloads")," in the right menu and click on ",(0,o.kt)("inlineCode",{parentName:"p"},"New Workload"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Choose ",(0,o.kt)("inlineCode",{parentName:"p"},"Regular application")))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"kubecfg",src:a(1499).Z,width:"2366",height:"610"})),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Enter a name for the workload")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hello-deploy\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Fill in the image to deploy:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"otomi/nodejs-helloworld\n")),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Fill in the tag of the image to deploy:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"v1.2.13\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"kubecfg",src:a(2382).Z,width:"3112",height:"2890"})),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click ",(0,o.kt)("inlineCode",{parentName:"p"},"Next"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Review the values. Here you can add more values supported by the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/redkubes/otomi-charts"},"otomi-charts")))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"kubecfg",src:a(5331).Z,width:"3116",height:"1766"})),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("inlineCode",{parentName:"li"},"Submit"))),(0,o.kt)("p",null,"Now click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Changes")),(0,o.kt)("p",null,"After a few minutes, Otomi will have created all the needed ArgoCD resources to deploy your workload. In the workloads list, click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Application")," link of your workload to see the status of your workload."),(0,o.kt)("p",null,"The values of a workload can be changed at any time. Changes will automatically be deployed."))}u.isMDXComponent=!0},2382:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/regular-app-2-bebe37ee4217715d4090d31c2373119f.png"},5331:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/regular-app-3-d7c0ab4e7c9b2ff530a44d96c355b4b8.png"},1499:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/regular-app-a646435a933694b837d38dc198388352.png"}}]);