"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[443],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=m(a),g=r,c=p["".concat(s,".").concat(g)]||p[g]||u[g]||l;return a?n.createElement(c,o(o({ref:t},d),{},{components:a})):n.createElement(c,o({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},660:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={slug:"settings",title:"Team Settings",sidebar_label:"Settings"},o=void 0,i={unversionedId:"for-devs/console/settings",id:"for-devs/console/settings",title:"Team Settings",description:"Based on self-service options allowed by the platfrom administrator, team members can change the settings of their team.",source:"@site/docs/for-devs/console/settings.md",sourceDirName:"for-devs/console",slug:"/for-devs/console/settings",permalink:"/docs/for-devs/console/settings",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-devs/console/settings.md",tags:[],version:"current",frontMatter:{slug:"settings",title:"Team Settings",sidebar_label:"Settings"},sidebar:"mainSidebar",previous:{title:"Deploy Changes",permalink:"/docs/for-devs/console/deploy-changes"},next:{title:"Alertmanager",permalink:"/docs/apps/alertmanager"}},s={},m=[{value:"Configure OIDC group mapping",id:"configure-oidc-group-mapping",level:2},{value:"Managed monitoring",id:"managed-monitoring",level:2},{value:"Grafana",id:"grafana",level:3},{value:"Prometheus",id:"prometheus",level:3},{value:"Alertmanger",id:"alertmanger",level:3},{value:"Configure alert settings",id:"configure-alert-settings",level:2},{value:"Configure Resource Quotas",id:"configure-resource-quotas",level:2},{value:"Configure Azure Monitor",id:"configure-azure-monitor",level:2},{value:"Configure Network Policies",id:"configure-network-policies",level:2},{value:"Team self service flags",id:"team-self-service-flags",level:2},{value:"Service",id:"service",level:3},{value:"Team",id:"team",level:3}],d={toc:m};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Based on self-service options allowed by the platfrom administrator, team members can change the settings of their team."),(0,r.kt)("h2",{id:"configure-oidc-group-mapping"},"Configure OIDC group mapping"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The OIDC group mapping will only be visible when Otomi is configured with an external Identity Provider (IdP).")),(0,r.kt)("p",null,"Change the OIDC group-mapping to allow access based on group membership."),(0,r.kt)("h2",{id:"managed-monitoring"},"Managed monitoring"),(0,r.kt)("p",null,"Activate a (platform) managed Grafana, Prometheus or Alertmanager instance for the team. The installed Grafana, Prometheus and Alertmanager will be monitored by the Platform administrator."),(0,r.kt)("h3",{id:"grafana"},"Grafana"),(0,r.kt)("p",null,"Enable to install a Grafana instance for the team."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Dependencies:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Grafana instance is automatically configured with a datasource for the Team's Prometheus."),(0,r.kt)("li",{parentName:"ul"},"If Loki (for logs) is enabled on the Platform, Grafana needs to be enabled here."),(0,r.kt)("li",{parentName:"ul"},"Grafana is provisioned with multiple dashboards that rely on the Platform Prometheus. If Prometheus on the Platform is not enabled, these dashboards will not work!")),(0,r.kt)("h3",{id:"prometheus"},"Prometheus"),(0,r.kt)("p",null,"Enable to install a Prometheus instance for the team. The Prometheus instance is configured to only scrape metrics from ",(0,r.kt)("inlineCode",{parentName:"p"},"PodMonitors")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ServiceMonitors")," that have the label ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus: team-<team-name>"),"."),(0,r.kt)("h3",{id:"alertmanger"},"Alertmanger"),(0,r.kt)("p",null,"Enable to install an Alertmanager instance for the team. The Alertmanger instance will only show alerts based on ",(0,r.kt)("inlineCode",{parentName:"p"},"Rules")," from the Team's Prometheus."),(0,r.kt)("h2",{id:"configure-alert-settings"},"Configure alert settings"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Alerts settings will only be active when Alertmanager is enabled for the team.")),(0,r.kt)("p",null,"Change the alert settings and preferred notification receivers."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Slack"),(0,r.kt)("td",{parentName:"tr",align:null},"Needs a slack webhook url that will give alerts for warnings and criticals")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Microsoft Teams"),(0,r.kt)("td",{parentName:"tr",align:null},"Needs two alerting endpoints, for both warnings as well as criticals")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Email"),(0,r.kt)("td",{parentName:"tr",align:null},"You may provide a list of email addresses for both 'Non Critical' and 'Critical'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"If none selected"),(0,r.kt)("td",{parentName:"tr",align:null},"Global (admin) alerting endpoint configuration will be used")))),(0,r.kt)("h2",{id:"configure-resource-quotas"},"Configure Resource Quotas"),(0,r.kt)("p",null,'When required, add resource quota for the team. The resource quota should adhere to the "spec.hard" format as described ',(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/policy/resource-quotas/"},"here"),"."),(0,r.kt)("admonition",{title:"Note",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There is no validation as there is no schema published. Add/change resource quota at your own risk.")),(0,r.kt)("h2",{id:"configure-azure-monitor"},"Configure Azure Monitor"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Configuring Azure Monitor settings will only be active when ",(0,r.kt)("inlineCode",{parentName:"p"},"cluster.provider=azure"),".")),(0,r.kt)("p",null,"Azure Monitor is the platform service that provides a single source for monitoring Azure resources."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"No Azure monitoring"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Azure monitoring with global settings"),(0,r.kt)("td",{parentName:"tr",align:null},"Takes on the global settings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Azure monitoring with custom settings"),(0,r.kt)("td",{parentName:"tr",align:null},"Overrides any global settings")))),(0,r.kt)("h2",{id:"configure-network-policies"},"Configure Network Policies"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Network policies"),(0,r.kt)("td",{parentName:"tr",align:null},"When enabled team services will be bound by (ingress) network policies")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Egress control"),(0,r.kt)("td",{parentName:"tr",align:null},"When enabled team service egress traffic will be limited to pre-defined endpoints only")))),(0,r.kt)("h2",{id:"team-self-service-flags"},"Team self service flags"),(0,r.kt)("p",null,"The self-service flags (what is a team allowed to) can only be configured by an admin user."),(0,r.kt)("h3",{id:"service"},"Service"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Permission"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Ingress"),(0,r.kt)("td",{parentName:"tr",align:null},"The Team is allowed to configure External Exposure for a Service")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Network policy"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to configure network (ingress and egress) for a Service")))),(0,r.kt)("h3",{id:"team"},"Team"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Permission"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Alerts"),(0,r.kt)("td",{parentName:"tr",align:null},"The Team is allowed to configure Alert settings for the team")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Billing alert quotas"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to configure Billing alert quotas for the team")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OIDC"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to configure the OIDC group mapping for the team")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Resource quotas"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to configure resource quotas for the team")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Download kube config"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to download the Kube Config")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Download docker config"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to download the Docker Config")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Network policy"),(0,r.kt)("td",{parentName:"tr",align:null},"The team is allowed to the Network policy configuration for the team")))))}u.isMDXComponent=!0}}]);