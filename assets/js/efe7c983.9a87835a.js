"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[6299],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>g});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),d=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(a),g=n,k=s["".concat(p,".").concat(g)]||s[g]||u[g]||l;return a?r.createElement(k,i(i({ref:e},m),{},{components:a})):r.createElement(k,i({ref:e},m))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:n,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},8645:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const l={slug:"roadmap",title:"Product Roadmap",sidebar_label:"Roadmap"},i=void 0,o={unversionedId:"roadmap",id:"roadmap",title:"Product Roadmap",description:"In 2023 we aim to incorporate the following features",source:"@site/product/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/product/roadmap",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/edit/main/product/roadmap.md",tags:[],version:"current",lastUpdatedBy:"srodenhuis",lastUpdatedAt:1680610294,formattedLastUpdatedAt:"Apr 4, 2023",frontMatter:{slug:"roadmap",title:"Product Roadmap",sidebar_label:"Roadmap"},sidebar:"mainSidebar",previous:{title:"Otomi Projects",permalink:"/product/architecture"},next:{title:"Release Plan",permalink:"/product/release-plan"}},p={},d=[{value:"In 2023 we aim to incorporate the following features",id:"in-2023-we-aim-to-incorporate-the-following-features",level:2},{value:"Developer experience",id:"developer-experience",level:3},{value:"Platform operations",id:"platform-operations",level:3}],m={toc:d};function u(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"in-2023-we-aim-to-incorporate-the-following-features"},"In 2023 we aim to incorporate the following features"),(0,n.kt)("p",null,"We will make a destinction between ",(0,n.kt)("inlineCode",{parentName:"p"},"developer-experience")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"platform operations"),":"),(0,n.kt)("h3",{id:"developer-experience"},"Developer experience"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Feature"),(0,n.kt)("th",{parentName:"tr",align:null},"Planned for"),(0,n.kt)("th",{parentName:"tr",align:null},"Status"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Self-service default Response headers per service"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Create workloads to Deploy Helm charts using ArgoCD"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Separate workloads from services. Services will be used for ingress/egress"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Download a push secret for the teams private image registry"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"In progress")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Prefill service names of deployed workloads"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Independent Drone pipelines for teams"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Developer workflows"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h3",{id:"platform-operations"},"Platform operations"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Feature"),(0,n.kt)("th",{parentName:"tr",align:null},"Planned for"),(0,n.kt)("th",{parentName:"tr",align:null},"Status"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Upgrade Harbor and add db backup option"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Integrate Thanos for multi-cluster monitoring"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Split-up cloud and storage configuration for Velero"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Define ingress-nginx settings for each ingress class"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Upgrade external secrets operator and add option for cluster-wide secrets"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Integrate Falco for threat detection"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"Ready \ud83d\ude80")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Support for Kubernetes version 1.24"),(0,n.kt)("td",{parentName:"tr",align:null},"Q1"),(0,n.kt)("td",{parentName:"tr",align:null},"In progress")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Multi entrypoints when using multiple ingress classes"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Read only mode in Otomi Console"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Add AlertManager receivers for Watchdog"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Make Otomi compliant to the ",(0,n.kt)("a",{parentName:"td",href:"https://media.defense.gov/2021/Aug/03/2002820425/-1/-1/0/CTR_Kubernetes_Hardening_Guidance_1.1_20220315.PDF"},"NSA hardening guide")),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null},"In progress")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Pod sec policy exceptions need to be approved by platform admin"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Harden Istio service mesh configuration"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Support use of Istio egress gateway without disrupting outbound traffic"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Manage users in Otomi when Keycloak is IdP"),(0,n.kt)("td",{parentName:"tr",align:null},"Q2"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"A platform admin can configure the shared apps available for a team"),(0,n.kt)("td",{parentName:"tr",align:null},"Q3"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Migrate OPA/Gatekeeper to Kyverno"),(0,n.kt)("td",{parentName:"tr",align:null},"TBD"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Team wide secrets"),(0,n.kt)("td",{parentName:"tr",align:null},"TBD"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Manage service' ingress features (ingress config per service)"),(0,n.kt)("td",{parentName:"tr",align:null},"TBD"),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Make Otomi storage class independent"),(0,n.kt)("td",{parentName:"tr",align:null},"TBD"),(0,n.kt)("td",{parentName:"tr",align:null})))))}u.isMDXComponent=!0}}]);