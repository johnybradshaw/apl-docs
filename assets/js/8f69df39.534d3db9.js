"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[8589],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,k=m["".concat(s,".").concat(d)]||m[d]||p[d]||l;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5872:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const l={slug:"aws",title:"AWS",sidebar_label:"AWS"},o="Install Otomi on EKS with DNS using Route53",i={unversionedId:"get-started/installation/aws",id:"get-started/installation/aws",title:"AWS",description:"Prerequisites",source:"@site/docs/get-started/installation/aws.md",sourceDirName:"get-started/installation",slug:"/get-started/installation/aws",permalink:"/docs/get-started/installation/aws",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/get-started/installation/aws.md",tags:[],version:"current",frontMatter:{slug:"aws",title:"AWS",sidebar_label:"AWS"},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/get-started/installation"},next:{title:"Azure",permalink:"/docs/get-started/installation/azure"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Additional resources",id:"additional-resources",level:2},{value:"Create an EKS cluster",id:"create-an-eks-cluster",level:2},{value:"Add a CNI",id:"add-a-cni",level:2},{value:"Configure Route53",id:"configure-route53",level:2},{value:"Create the values.yaml file",id:"create-the-valuesyaml-file",level:2},{value:"Install Otomi on EKS",id:"install-otomi-on-eks",level:2}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"install-otomi-on-eks-with-dns-using-route53"},"Install Otomi on EKS with DNS using Route53"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cli/"},"AWS CLI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://cloud.google.com/sdk/docs/install"},"Terraform")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Helm"))),(0,r.kt)("h2",{id:"additional-resources"},"Additional resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you use VSCode, hover over variables to see the description/type in .tf and .tfvars files with the ",(0,r.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform"},"Terraform extension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://learn.hashicorp.com/tutorials/terraform/aws-build"},"How to setup aws cli and terraform"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="AWS CLI Cheat Sheet"',title:'"AWS',CLI:!0,Cheat:!0,'Sheet"':!0},"# Obtain account\naws sts get-caller-identity\n# Obtain username and userarn\naws iam get-user\n# Obtain rolearn\naws iam list-roles\n# Obtain groups\naws iam list-groups\n")),(0,r.kt)("h2",{id:"create-an-eks-cluster"},"Create an EKS cluster"),(0,r.kt)("p",null,"Clone the Otomi Terraform repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/redkubes/quickstart.git\ncd eks\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy ",(0,r.kt)("inlineCode",{parentName:"li"},"example.tfvars")," file to ",(0,r.kt)("inlineCode",{parentName:"li"},"terraform.tfvars")," file and fill in missing configuration parameters"),(0,r.kt)("li",{parentName:"ul"},"Open a terminal and run the following:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"terraform init\n# install the EKS cluster\nterraform apply\n")),(0,r.kt)("h2",{id:"add-a-cni"},"Add a CNI"),(0,r.kt)("p",null,"To use the network policies feature in Otomi, make sure to install the ",(0,r.kt)("a",{parentName:"p",href:"https://www.tigera.io/project-calico/"},"Calico")," CNI or any other CNI that supports Kubernetes network polices."),(0,r.kt)("p",null,"Install Tigera Operator:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add projectcalico https://docs.tigera.io/calico/charts\nhelm repo update\nkubectl create namespace tigera-operator\nhelm install calico projectcalico/tigera-operator --version v3.26.3 --namespace tigera-operator\n")),(0,r.kt)("p",null,"Or install Calico minimal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.3/manifests/calico.yaml\n")),(0,r.kt)("h2",{id:"configure-route53"},"Configure Route53"),(0,r.kt)("p",null,"Follow these steps to use AWS Route53."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Register a domain and retrieve the Hosted zone ID"),(0,r.kt)("li",{parentName:"ol"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"dns-policy.json")," file for the policy and add the Zone ID:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Action": "route53:GetChange",\n            "Resource": "arn:aws:route53:::change/*"\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "route53:ChangeResourceRecordSets",\n                "route53:ListResourceRecordSets"\n            ],\n            "Resource": [\n                "arn:aws:route53:::hostedzone/<your-zone-id>"\n            ]\n        },\n        {\n            "Effect": "Allow",\n            "Action": [\n                "route53:ListHostedZonesByName",\n                "route53:ListHostedZones"\n            ],\n            "Resource": [\n                "*"\n            ]\n        }\n    ]\n}\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Create the policy:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'aws iam create-policy --policy-name "otomi-dns" --policy-document file://dns-policy.json\n')),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"export the policy ARN:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export POLICY_ARN=$(aws iam list-policies --query 'Policies[?PolicyName==`<policy-name>`].Arn' --output text)\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Create a user:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"USER=user-name\naws iam create-user --user-name $USER\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Attach the user to the policy:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"aws iam attach-user-policy --user-name $USER --policy-arn $POLICY_ARN\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Create the ",(0,r.kt)("inlineCode",{parentName:"li"},"access-key"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ACCESS_KEY=$(aws iam create-access-key --user-name $USER)\n")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Get the ",(0,r.kt)("inlineCode",{parentName:"li"},"secret-access-id")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"secret-access-key"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ACCESS_KEY_ID=$(echo $ACCESS_KEY | jq -r '.AccessKey.AccessKeyId')\nACCESS_KEY_SECRET=$(echo $ACCESS_KEY | jq -r '.AccessKey.SecretAccessKey')\n")),(0,r.kt)("h2",{id:"create-the-valuesyaml-file"},"Create the values.yaml file"),(0,r.kt)("p",null,"Add the DNS configuration created in the previous step to the ",(0,r.kt)("inlineCode",{parentName:"p"},"values.yaml")," that we'll use to install Otomi:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tee values.yaml<<EOF\ncluster:\n  name: otomi\n  provider: aws\n  domainSuffix: your-domain.com\notomi:\n  hasExternalDNS: true\ndns:\n  domainFilters: \n    - your-domain.com\n  provider:\n    aws:\n      credentials:\n        secretKey: $ACCESS_KEY_ID\n        accessKey: $ACCESS_KEY_SECRET\n      region: eu-central-1 # your region\napps:\n  cert-manager:\n    issuer: letsencrypt\n    stage: production\n    email: admin@your-domain.com\nEOF\n")),(0,r.kt)("p",null,"And adjust the ",(0,r.kt)("inlineCode",{parentName:"p"},"domainSuffix"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"domainFilters"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"region")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),"."),(0,r.kt)("h2",{id:"install-otomi-on-eks"},"Install Otomi on EKS"),(0,r.kt)("p",null,"Get the credentials of the cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Update your kubeconfig\n# Default: aws eks update-kubeconfig --name otomi\naws eks update-kubeconfig --name <cluster_name>\n")),(0,r.kt)("p",null,"Install Otomi using Helm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add otomi https://otomi.io/otomi-core\nhelm repo update\nhelm install -f values.yaml otomi otomi/otomi\n")),(0,r.kt)("p",null,"Monitor the logs of the installer job:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs jobs/otomi -n default -f\n")),(0,r.kt)("p",null,"When the installer is finished, copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"admin-password")," from the console output."),(0,r.kt)("p",null,"Follow the activation steps ",(0,r.kt)("a",{parentName:"p",href:"https://otomi.io/docs/get-started/activation"},"here.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Like to learn how to use Otomi? Go through the ",(0,r.kt)("a",{parentName:"p",href:"/docs/for-devs/get-started/overview"},"Get Started labs"))))}p.isMDXComponent=!0}}]);