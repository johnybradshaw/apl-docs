"use strict";(self.webpackChunkredkubes_github_io=self.webpackChunkredkubes_github_io||[]).push([[4722],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,h=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return n?o.createElement(h,i(i({ref:t},m),{},{components:n})):o.createElement(h,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5243:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={slug:"core-only",title:"Use Otomi Core only",sidebar_label:"Use Core only"},i=void 0,l={unversionedId:"for-ops/how-to/core-only",id:"for-ops/how-to/core-only",title:"Use Otomi Core only",description:"Otomi by default installs Gitea, Drone, Otomi API and Otomi Console. Otomi Console is the self-service UI and uses Otomi API to generate validated configuration code. This configuration code is then committed to Gitea (in the values repository), which will trigger teh pre-configured Drone pipeline to apply the changes.",source:"@site/docs/for-ops/how-to/core-only.md",sourceDirName:"for-ops/how-to",slug:"/for-ops/how-to/core-only",permalink:"/docs/for-ops/how-to/core-only",draft:!1,editUrl:"https://github.com/redkubes/redkubes.github.io/tree/main/docs/for-ops/how-to/core-only.md",tags:[],version:"current",frontMatter:{slug:"core-only",title:"Use Otomi Core only",sidebar_label:"Use Core only"},sidebar:"mainSidebar",previous:{title:"Use Team Admin",permalink:"/docs/for-ops/how-to/use-team-admin"},next:{title:"Switch to use DNS",permalink:"/docs/for-ops/how-to/switch-to-dns"}},s={},c=[{value:"Example",id:"example",level:2}],m={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Otomi by default installs Gitea, Drone, Otomi API and Otomi Console. Otomi Console is the self-service UI and uses Otomi API to generate validated configuration code. This configuration code is then committed to Gitea (in the ",(0,r.kt)("inlineCode",{parentName:"p"},"values")," repository), which will trigger teh pre-configured Drone pipeline to apply the changes."),(0,r.kt)("p",null,"In some cases you might not want to use Otomi Console, Otomi API and Drone, but instead install and manage configuration of the platform using a custom pipeline. Possible use-cases for this scenario are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pushing configuration changes to multiple clusters at the same time (edge use-case)"),(0,r.kt)("li",{parentName:"ul"},"Not allowing configuration changes be made by developers"),(0,r.kt)("li",{parentName:"ul"},"Only using the open source ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/redkubes/otomi-core"},"otomi-core")," project")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"The example Otomi chart values below shows how to install Otomi with "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Drone disabled"),(0,r.kt)("li",{parentName:"ul"},"A team with 2 workloads and 2 services")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"cluster:\n  name: ${clusterName}\n  provider: ${clusterProvider}\notomi:\n  adminPassword: ${password}\napps:\n  argocd:\n    enabled: true\n  drone:\n    enabled: false\nteamConfig:\n  demo:\n    password: ${somePassword}\n    id: myapp\n    networkPolicy:\n      egressPublic: true\n      ingressPrivate: true\n    services:\n      - name: front-end\n        ingressClassName: platform\n        networkPolicy:\n            ingressPrivate:\n                mode: DenyAll\n        ownHost: true\n        port: 8080\n        type: public\n        headers:\n          response:\n            set:\n              - name: Cache-Control\n                value: no-store\n              - name: Pragma\n                value: no-cache\n      - name: api\n        networkPolicy:\n            ingressPrivate:\n                mode: AllowOnly\n                allow:\n                  team: myapp\n                  service: front-end\n        port: 8081\n    workloads:\n      - name: front-end\n        path: ksvc\n        revision: v1.0.1\n        selectedChart: ksvc\n        url: https://github.com/redkubes/otomi-charts.git\n      - name: api\n        path: deployment\n        revision: v1.0.1\n        selectedChart: deployment\n        url: https://github.com/redkubes/otomi-charts.git\nfiles:\n  env/teams/workloads/demo/front-end.yaml: |\n    values: |\n        fullnameOverride: front-end\n        image:\n            repository: harbor.${domainSuffix}/team-demo/front-end\n            tag: latest\n        containerPorts:\n            - name: http1\n            containerPort: 8080\n            protocol: TCP\n        resources:\n            requests:\n                cpu: 200m\n                memory: 32Mi\n        autoscaling:\n            minReplicas: 0\n            maxReplicas: 10    \n  env/teams/workloads/demo/api.yaml: |\n    values: |\n      image:\n        image:\n            repository: harbor.${domainSuffix}/team-demo/api\n            tag: latest\n        containerPorts:\n            - name: http1\n            containerPort: 8080\n            protocol: TCP\n        resources:\n            requests:\n                cpu: 200m\n                memory: 32Mi\n        autoscaling:\n            minReplicas: 1\n            maxReplicas: 10    \n")),(0,r.kt)("p",null,"You can now make changes in this configuration and apply them directly to the cluster:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install otomi using your custom values:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"helm install -f values.yaml otomi otomi/otomi\n")),(0,r.kt)("p",null,"After Otomi has been installed with these values, Otomi will install and configure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All required ingress resources"),(0,r.kt)("li",{parentName:"ul"},"Istio (including the virtual services for public exposed services with HTTP response headers)"),(0,r.kt)("li",{parentName:"ul"},"Network policies"),(0,r.kt)("li",{parentName:"ul"},"ArgoCD and ArgoCD application sets to automatically deploy the front-end and api workloads")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Change the values")),(0,r.kt)("p",null,"You can extend the values with all Otomi supported configuration."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Uninstall the Otomi release:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"helm uninstall otomi --no-hooks\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Re-install the chart with the adjusted values:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"helm install -f values.yaml otomi otomi/otomi\n")))}u.isMDXComponent=!0}}]);