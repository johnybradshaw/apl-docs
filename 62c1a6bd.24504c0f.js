(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),a=(n(0),n(189)),s={slug:"sre/known-issues/custom-ca",title:"Known Issues: Using a custom CA",sidebar_label:"Custom CA"},i={unversionedId:"ki-custom-ca",id:"ki-custom-ca",isDocsHomePage:!1,title:"Known Issues: Using a custom CA",description:"When using a BYO CA or a auto-generated CA, some Otomi functionality may not work.",source:"@site/docs/ki-custom-ca.md",slug:"/sre/known-issues/custom-ca",permalink:"/docs/sre/known-issues/custom-ca",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/ki-custom-ca.md",version:"current",sidebar_label:"Custom CA",sidebar:"mainSidebar",previous:{title:"Known Issues",permalink:"/docs/sre/known-issues/"},next:{title:"Known Issues: Current Otomi CLI",permalink:"/docs/sre/known-issues/cli"}},u=[{value:"Can not pull images from Harbor when using a custom CA",id:"can-not-pull-images-from-harbor-when-using-a-custom-ca",children:[]}],c={toc:u};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"When using a BYO CA or a auto-generated CA, some Otomi functionality may not work."),Object(a.b)("h3",{id:"can-not-pull-images-from-harbor-when-using-a-custom-ca"},"Can not pull images from Harbor when using a custom CA"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Problem")),Object(a.b)("p",null,"When running Otomi on Azure AKS (version 1.19 and up), it is not possible to pull images from Harbor because the CA is not valid."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Cause")),Object(a.b)("p",null,"When Otomi is installed with minimal values, a CA is automatically generated and added to the worker nodes using a DeamonSet. From AKS 1.19, Docker has been replaced by Containerd. Docker automatically picked up these cert files, but although Containerd has a similar functionality, this requires the registry configpath parameter to be set. By default this parameter is empty on the AKS worker nodes."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Solution")," "),Object(a.b)("p",null,"Add the CA.crt manually to the worker nodes. Also see Azure AKS issue ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Azure/AKS/issues/1940"}),"#1940"),". A solution is expected by the end of January 2022."))}l.isMDXComponent=!0},189:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),l=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(n),b=r,d=p["".concat(s,".").concat(b)]||p[b]||m[b]||a;return n?o.a.createElement(d,i(i({ref:t},c),{},{components:n})):o.a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=b;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);