(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{150:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(183)),l={slug:"tutorials/create-deployment",title:"Create a deployment",sidebar_label:"Create a K8s service"},c={unversionedId:"tutorial-2",id:"tutorial-2",isDocsHomePage:!1,title:"Create a deployment",description:"In this tutorial, we are going to deploy the image we build , tagged and pushed to harbor in the previous tutorial by creating a Kubernetes deployment to rollout a ReplicaSet and by creating a Kubernetes Service.",source:"@site/docs/tutorial-2.md",slug:"/tutorials/create-deployment",permalink:"/docs/tutorials/create-deployment",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/tutorial-2.md",version:"current",sidebar_label:"Create a K8s service",sidebar:"mainSidebar",previous:{title:"Build, tag and push an image to Harbor",permalink:"/docs/tutorials/build-tag-push"},next:{title:"Publicly expose an existing Kubernetes service",permalink:"/docs/tutorials/expose-service"}},i=[{value:"Create a Kubernetes Deployment and Service",id:"create-a-kubernetes-deployment-and-service",children:[{value:"Set kubectl context",id:"set-kubectl-context",children:[]}]}],p={toc:i};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In this tutorial, we are going to deploy the image we build , tagged and pushed to harbor in the previous tutorial by creating a Kubernetes deployment to rollout a ReplicaSet and by creating a Kubernetes Service. "),Object(o.b)("h2",{id:"create-a-kubernetes-deployment-and-service"},"Create a Kubernetes Deployment and Service"),Object(o.b)("p",null,"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"hello.yaml")," file and copy/paste the following 2 Kubernetes manifests:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hello\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: hello\n  template:\n    metadata:\n      labels:\n        app: hello\n    spec:\n      containers:\n      - name: hello\n        image: harbor.your-domain.com/team-demo/hello-world:latest\n        resources:\n          limits:\n            memory: "128Mi"\n            cpu: "500m"\n        securityContext:\n          runAsUser: 1001\n        ports:\n        - containerPort: 3000\n      imagePullSecrets: \n      - name: "harbor-pullsecret" \n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello\nspec:\n  selector:\n    app: hello\n  ports:\n  - port: 80\n    targetPort: 3000\n')),Object(o.b)("h3",{id:"set-kubectl-context"},"Set kubectl context"),Object(o.b)("p",null,"In Otomi console, select team ",Object(o.b)("inlineCode",{parentName:"p"},"demo")," in the top bar. On the bottom of the left panel, click on ",Object(o.b)("inlineCode",{parentName:"p"},"download KUBECFG"),"."),Object(o.b)("p",null,"Now export the KUBECFG to set the kubectl context:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"export KUBECONFIG=$path-to-your-kubeconfig.yaml\n")),Object(o.b)("p",null,"And apply the manifest to Kubernetes:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"kubectl apply -f hello.yaml\n")),Object(o.b)("p",null,"Check if the deployment and service have been created:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"kubectl get deployment hello\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"kubectl get svc hello -n team-demo\n")))}u.isMDXComponent=!0},183:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),u=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=u(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,m=s["".concat(l,".").concat(d)]||s[d]||b[d]||o;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var p=2;p<o;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);