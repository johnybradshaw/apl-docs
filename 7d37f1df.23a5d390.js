(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(167)),c={slug:"ce/clusters",title:"Clusters"},l={unversionedId:"ce-clusters",id:"ce-clusters",isDocsHomePage:!1,title:"Clusters",description:"Otomi Console",source:"@site/docs/ce-clusters.md",slug:"/ce/clusters",permalink:"/docs/ce/clusters",editUrl:"https://github.com/redkubes/redkubes/tree/master/docs/ce-clusters.md",version:"current",sidebar:"mainSidebar",previous:{title:"Changing settings in CE mode",permalink:"/docs/ce/settings"},next:{title:"Team Apps",permalink:"/docs/ce/team-apps"}},i=[{value:"Otomi Console",id:"otomi-console",children:[]},{value:"Adding additional clusters",id:"adding-additional-clusters",children:[{value:"1. Modify the settings.yaml",id:"1-modify-the-settingsyaml",children:[]},{value:"2. validate changes (optional)",id:"2-validate-changes-optional",children:[]},{value:"3. Apply changes",id:"3-apply-changes",children:[]}]}],s={toc:i};function u(e){var t=e.components,c=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,c,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"otomi-console"},"Otomi Console"),Object(o.b)("p",null,"All known Otomi clusters are listed on this page. Clusters can be sorted based on:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Property"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Provider"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The configured Otomi provider (",Object(o.b)("inlineCode",{parentName:"td"},"AWS"),", ",Object(o.b)("inlineCode",{parentName:"td"},"Azure"),", ",Object(o.b)("inlineCode",{parentName:"td"},"Google")," or ",Object(o.b)("inlineCode",{parentName:"td"},"on-prem"),")")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The name of the cluster")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The URL of the Otomi Console of the cluster")))),Object(o.b)("p",null,"Kubernetes clusters running Otomi can be grouped by adding additional clusters. This enables to switch context between clusters by selecting ",Object(o.b)("inlineCode",{parentName:"p"},"Cluster")," on the top bar."),Object(o.b)("p",null,"Screenshot (team role):"),Object(o.b)("p",null,Object(o.b)("img",{alt:"Console clusters",src:n(235).default})),Object(o.b)("h2",{id:"adding-additional-clusters"},"Adding additional clusters"),Object(o.b)("p",null,"To create a team, follow these steps:"),Object(o.b)("h3",{id:"1-modify-the-settingsyaml"},"1. Modify the settings.yaml"),Object(o.b)("p",null,"Add the additional cluster to the ",Object(o.b)("inlineCode",{parentName:"p"},"values/env/settings.yaml"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"otomi:\n  additionalClusters:\n    - domainSuffix: cluster-name.your-domain.com # the domain name of the cluster\n      name: cluster-name # the name of the cluster\n      provider: provider # the cloud provider where your cluster is running (AWS, Azure or Google)\n")),Object(o.b)("h3",{id:"2-validate-changes-optional"},"2. validate changes (optional)"),Object(o.b)("p",null,"When using Otomi CLI, you can validate the changes in the values based on the Otomi values schema:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"otomi validate-values\n")),Object(o.b)("p",null,"Use -v to get more output"),Object(o.b)("p",null,"When successful, the output will show: ",Object(o.b)("inlineCode",{parentName:"p"},"otomi:validate-values:verbose Values validation SUCCESSFUL")),Object(o.b)("h3",{id:"3-apply-changes"},"3. Apply changes"),Object(o.b)("p",null,"Commit and push the changes using Otomi CLI:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"otomi apply\n")),Object(o.b)("p",null,"And then (optionally) commit and push the changes to git:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'otomi commit -m "your commit comment" --no-verify\n')))}u.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=u(n),d=a,m=b["".concat(c,".").concat(d)]||b[d]||p[d]||o;return n?r.a.createElement(m,l(l({ref:t},s),{},{components:n})):r.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},235:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/ce-clusters-9ea9e415c21e21543c92f919c8e695c8.png"}}]);