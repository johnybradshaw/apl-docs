(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{128:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=s(n),p=a,m=u["".concat(o,".").concat(p)]||u[p]||d[p]||i;return n?r.a.createElement(m,c(c({ref:t},b),{},{components:n})):r.a.createElement(m,c({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},194:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/console-new-service-3143b023d6cbe0a2800e01a46cbe7c2c.png"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),i=(n(0),n(128)),o={slug:"console/configuring-services",title:"Configuring services"},c={unversionedId:"cons-configuring-services",id:"cons-configuring-services",isDocsHomePage:!1,title:"Configuring services",description:"This page describes how to create a service, and how to edit a service. Both creating and editing a service use the same form.",source:"@site/docs/cons-configuring-services.md",slug:"/console/configuring-services",permalink:"/docs/console/configuring-services",editUrl:"https://github.com/redkubes/redkubes/tree/master/docs/cons-configuring-services.md",version:"current",sidebar:"mainSidebar",previous:{title:"Configuring teams",permalink:"/docs/console/configuring-teams"},next:{title:"Configuring secrets",permalink:"/docs/console/configuring-secrets"}},l=[{value:"Name",id:"name",children:[]},{value:"Port",id:"port",children:[]},{value:"Type",id:"type",children:[{value:"1. New Knative Service",id:"1-new-knative-service",children:[]},{value:"Pod annotations",id:"pod-annotations",children:[]},{value:"Pod security context",id:"pod-security-context",children:[]},{value:"Scale to zero",id:"scale-to-zero",children:[]},{value:"Container image",id:"container-image",children:[]},{value:"Environment variables",id:"environment-variables",children:[]},{value:"Pod resources",id:"pod-resources",children:[]},{value:"2. Existing Knative Service",id:"2-existing-knative-service",children:[]},{value:"3. Existing Kubernetes Service",id:"3-existing-kubernetes-service",children:[]}]},{value:"Exposure",id:"exposure",children:[{value:"Cluster",id:"cluster",children:[]},{value:"Public &amp; Private",id:"public--private",children:[]}]},{value:"AutoCD (coming soon!)",id:"autocd-coming-soon",children:[]}],b={toc:l};function s(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This page describes how to create a service, and how to edit a service. Both creating and editing a service use the same form."),Object(i.b)("p",null,"Screenshot:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Console: new service",src:n(194).default})),Object(i.b)("h2",{id:"name"},"Name"),Object(i.b)("p",null,"Name of the service. Will be used to generate hostname if ",Object(i.b)("inlineCode",{parentName:"p"},"Use suggested domain")," is chosen (see below)"),Object(i.b)("h2",{id:"port"},"Port"),Object(i.b)("p",null,"Port of the service."),Object(i.b)("h2",{id:"type"},"Type"),Object(i.b)("p",null,"What type of service to deploy/expose. Three options exist:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#1-knative-service"}),"1. New Knative Service")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#2-existing-knative-service"}),"2. Existing Knative service")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#3-existing-kubernetes-service"}),"3. Existing Kubernetes Service"))),Object(i.b)("h3",{id:"1-new-knative-service"},"1. New Knative Service"),Object(i.b)("p",null,"Deploy a new knative service."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Setting"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Container image repository"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The full repository url of the image (i.e. ",Object(i.b)("inlineCode",{parentName:"td"},"otomi/console"),")")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Container image tag"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The image tag (i.e. ",Object(i.b)("inlineCode",{parentName:"td"},"latest"),")")))),Object(i.b)("h3",{id:"pod-annotations"},"Pod annotations"),Object(i.b)("p",null,"Kubernetes annotations with arbitrary metadata."),Object(i.b)("h3",{id:"pod-security-context"},"Pod security context"),Object(i.b)("p",null,"Kubernetes pod security context."),Object(i.b)("h4",{id:"run-as-user"},"Run as user"),Object(i.b)("p",null,"AKA ",Object(i.b)("inlineCode",{parentName:"p"},"runAsUser"),"\nThe User ID that the pod's containers' processes will run with.\nWhen ",Object(i.b)("inlineCode",{parentName:"p"},"runAsNonRoot")," is enforced by policies, k8s needs to be able to determine that the process user is not root. If it can't retrieve a numeric user id that check will fail. This options allows to set it. "),Object(i.b)("h4",{id:"run-as-group"},"Run as group"),Object(i.b)("p",null,"AKA ",Object(i.b)("inlineCode",{parentName:"p"},"runAsGroup"),"\nThe Group ID that the pod's containers' processes will run with.\nWhen ",Object(i.b)("inlineCode",{parentName:"p"},"runAsNonRoot")," is enforced by policies, k8s needs to be able to determine that the process user is not root. If it can't retrieve a numeric user id that check will fail. This options allows to set it. "),Object(i.b)("h4",{id:"run-as-non-root"},"Run as non root"),Object(i.b)("p",null,"AKA ",Object(i.b)("inlineCode",{parentName:"p"},"runAsNonRoot"),"\nInforms k8s that the pod will not be needing root access."),Object(i.b)("h3",{id:"scale-to-zero"},"Scale to zero"),Object(i.b)("p",null,"Will bring down service if not accessed for 60 seconds. Will also disable probes that check to see if the service is up."),Object(i.b)("h3",{id:"container-image"},"Container image"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"repository: The image repository of the container to deploy."),Object(i.b)("li",{parentName:"ul"},"tag: The image tag of the container to deploy. We recommend semver version tags for a sane deployment strategy. For more on that see section ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#autocd"}),"AutoCD")," below.")),Object(i.b)("h3",{id:"environment-variables"},"Environment variables"),Object(i.b)("p",null,"Provide all the needed environment variables that are needed for your container to run."),Object(i.b)("h3",{id:"pod-resources"},"Pod resources"),Object(i.b)("p",null,"Please refer to the kubernetes documentation for in depth information on how to determine the values your workload needs."),Object(i.b)("h4",{id:"requests"},"Requests"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"cpu: the guaranteed amount of CPU"),Object(i.b)("li",{parentName:"ul"},"memory: the guaranteed amount of RAM")),Object(i.b)("h4",{id:"limits"},"Limits"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"cpu: the maximum amount of CPU"),Object(i.b)("li",{parentName:"ul"},"memory: the maximum amount of RAM")),Object(i.b)("p",null,"NOTE: Limits are not guaranteed. If you need guaranteed resources, set higher ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#141-requests"}),"requests"),"."),Object(i.b)("h3",{id:"2-existing-knative-service"},"2. Existing Knative Service"),Object(i.b)("p",null,"Expects a readily deployed knative service by the name given. This option will do an internal rewrite of the public url to the existing knative url."),Object(i.b)("h3",{id:"3-existing-kubernetes-service"},"3. Existing Kubernetes Service"),Object(i.b)("p",null,"Expects a readily deployed Kubernetes service by the name given."),Object(i.b)("h2",{id:"exposure"},"Exposure"),Object(i.b)("p",null,"Controls wether internet exposure should be enabled or not. Two options exist:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Cluster"),": has no internet exposure, and is only accessible in the cluster"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Private"),": only accessible via the cluster's private network loadbalancer"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Public"),": publicly accessible via the cluster's public network loadbalancer")),Object(i.b)("h3",{id:"cluster"},"Cluster"),Object(i.b)("p",null,'If backend is a ksvc, this will expose a knative service on a local istio gateway, so other services can access it at their "$svc.$namespace" host name.'),Object(i.b)("p",null,"(Coming soon: ability to choose endpoints to connect to, so network policies are automatically generated.)"),Object(i.b)("h3",{id:"public--private"},"Public & Private"),Object(i.b)("p",null,"A public URL will have a hostname that consists of ",Object(i.b)("inlineCode",{parentName:"p"},"$HOST_NAME.$DNS_ZONE"),". Options are described below."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Setting"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"TLS passthrough"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pass through the request as is to the backing service.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Use suggested domain"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The suggested domain is the team domain for which a wildcard certificate already exists. Has the team name in it.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Host"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Choose a hostname that will be the prefix of the domain.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Forward path"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'Do not "terminate" the path but instead pass it to the receiving service.')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"DNS Zone"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Choose a dns zone that will be the suffix of the domain.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Authenticate with Single Sign On"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Forwards any unauthenticated traffic to the Keycloak login page, which might forward to an external IDP.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Already has a certificate"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Don't generate certificates for this service.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"> Certificate ARN"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"[AWS only]"," Provide the certificate arn.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"> Select existing secret name"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"[non AWS]"," Provide a TLS secret name previously created under ",Object(i.b)("inlineCode",{parentName:"td"},"Secrets"),". Override to select name of secret not known here.")))),Object(i.b)("h2",{id:"autocd-coming-soon"},"AutoCD (coming soon!)"),Object(i.b)("p",null,"Wether or not to allow automatic deployment of image tags that match the chosen strategy's matcher."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Setting"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Off"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"No automatic continuous deployment")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Semver versioning"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'Semver version pattern. Use this filter if your images tags follow semantic versioning rules (MAJOR.MINOR.PATCH). E.g.: PATCH only: "~1.1", MINOR and PATCH only "~1", ALL "',"*",'"')),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Glob pattern matching"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'Glob string pattern. Use this filter if you want to make simple non-standard patterns. E.g.: "master-v1.',Object(i.b)("em",{parentName:"td"},"."),'"')))))}s.isMDXComponent=!0}}]);