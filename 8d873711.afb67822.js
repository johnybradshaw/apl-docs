(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{136:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),i=(n(0),n(185)),o={slug:"tutorials/create-knative-service",title:"Create a Knative service",sidebar_label:"Create a Knative service"},c={unversionedId:"tutorial-5-create-ksvc",id:"tutorial-5-create-ksvc",isDocsHomePage:!1,title:"Create a Knative service",description:"When Otomi is installed with minimal values, a CA is automatically generated and added to the worker nodes. When using Azure AKS version 1.19 and up, the CA can not be automatically added to the worker nodes and pulling images from a Harbor registry is not possible. See this known issue for more information.",source:"@site/docs/tutorial-5-create-ksvc.md",slug:"/tutorials/create-knative-service",permalink:"/docs/tutorials/create-knative-service",editUrl:"https://github.com/redkubes/redkubes.github.io/tree/master/docs/tutorial-5-create-ksvc.md",version:"current",sidebar_label:"Create a Knative service",sidebar:"mainSidebar",previous:{title:"Create a Kubernetes service",permalink:"/docs/tutorials/create-k8s-service"},next:{title:"Publicly expose an existing service with Otomi",permalink:"/docs/tutorials/expose-service"}},s=[{value:"Create a Knative Service",id:"create-a-knative-service",children:[]},{value:"Deploy the Knative Service",id:"deploy-the-knative-service",children:[]}],l={toc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"When Otomi is installed with minimal values, a CA is automatically generated and added to the worker nodes. When using Azure AKS version 1.19 and up, the CA can not be automatically added to the worker nodes and pulling images from a Harbor registry is not possible. See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/sre/known-issues/custom-ca"}),"this")," known issue for more information."))),Object(i.b)("p",null,"In this tutorial, you are going to deploy the image you build, tagged and pushed to harbor in the previous tutorial by creating a Knative service."),Object(i.b)("h3",{id:"create-a-knative-service"},"Create a Knative Service"),Object(i.b)("p",null,"Create a ",Object(i.b)("inlineCode",{parentName:"p"},"hello-ksvc.yaml")," file and copy/paste the following Kubernetes manifests:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: hello-ksvc\nspec:\n  template:\n    metadata:\n      annotations:\n        autoscaling.knative.dev/minScale: '1'\n        policy.otomi.io/ignore-sidecar: container-limits,psp-allowed-users\n    spec:\n      containers:\n        - image: harbor.your-domain.com/team-demo/hello-world:demo\n          securityContext:\n            runAsUser: 1001\n")),Object(i.b)("h3",{id:"deploy-the-knative-service"},"Deploy the Knative Service"),Object(i.b)("p",null,"If you haven't done already, first set your kubectl context:"),Object(i.b)("p",null,"In Otomi console, select team ",Object(i.b)("inlineCode",{parentName:"p"},"demo")," in the top bar. On the bottom of the left panel, click on ",Object(i.b)("inlineCode",{parentName:"p"},"download KUBECFG"),"."),Object(i.b)("p",null,"Now export the KUBECFG to set the kubectl context:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"export KUBECONFIG=$path-to-your-kubeconfig.yaml\n")),Object(i.b)("p",null,"And apply the manifest to Kubernetes:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl apply -f hello-ksvc.yaml\n")),Object(i.b)("p",null,"Check if the Knative service has been created:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"kubectl describe ksvc hello-ksvc\n")))}u.isMDXComponent=!0},185:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(n),d=a,m=b["".concat(o,".").concat(d)]||b[d]||p[d]||i;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);